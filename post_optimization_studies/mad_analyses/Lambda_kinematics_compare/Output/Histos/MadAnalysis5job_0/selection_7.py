def selection_7():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,3000.0,161,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([9.375,28.125,46.875,65.625,84.375,103.125,121.875,140.625,159.375,178.125,196.875,215.625,234.375,253.125,271.875,290.625,309.375,328.125,346.875,365.625,384.375,403.125,421.875,440.625,459.375,478.125,496.875,515.625,534.375,553.125,571.875,590.625,609.375,628.125,646.875,665.625,684.375,703.125,721.875,740.625,759.375,778.125,796.875,815.625,834.375,853.125,871.875,890.625,909.375,928.125,946.875,965.625,984.375,1003.125,1021.875,1040.625,1059.375,1078.125,1096.875,1115.625,1134.375,1153.125,1171.875,1190.625,1209.375,1228.125,1246.875,1265.625,1284.375,1303.125,1321.875,1340.625,1359.375,1378.125,1396.875,1415.625,1434.375,1453.125,1471.875,1490.625,1509.375,1528.125,1546.875,1565.625,1584.375,1603.125,1621.875,1640.625,1659.375,1678.125,1696.875,1715.625,1734.375,1753.125,1771.875,1790.625,1809.375,1828.125,1846.875,1865.625,1884.375,1903.125,1921.875,1940.625,1959.375,1978.125,1996.875,2015.625,2034.375,2053.125,2071.875,2090.625,2109.375,2128.125,2146.875,2165.625,2184.375,2203.125,2221.875,2240.625,2259.375,2278.125,2296.875,2315.625,2334.375,2353.125,2371.875,2390.625,2409.375,2428.125,2446.875,2465.625,2484.375,2503.125,2521.875,2540.625,2559.375,2578.125,2596.875,2615.625,2634.375,2653.125,2671.875,2690.625,2709.375,2728.125,2746.875,2765.625,2784.375,2803.125,2821.875,2840.625,2859.375,2878.125,2896.875,2915.625,2934.375,2953.125,2971.875,2990.625])

    # Creating weights for histo: y8_M_0
    y8_M_0_weights = numpy.array([0.0,0.0,0.0,0.0,0.0,0.0,2032.84407367,3252.55027788,2439.41280841,4065.68734735,2439.41280841,5285.39515155,7318.23882523,4878.82721682,4472.25528208,5691.96308629,4472.25528208,7724.80675996,4065.68734735,5285.39515155,3659.11941261,5285.39515155,5285.39515155,5691.96308629,4878.82721682,8131.37469469,4472.25528208,8537.94662943,4065.68734735,8131.37469469,5285.39515155,7724.80675996,6911.67089049,2845.98154314,5691.96308629,6911.67089049,6911.67089049,6505.09895576,5691.96308629,4065.68734735,5285.39515155,5691.96308629,4878.82721682,5285.39515155,7724.80675996,4878.82721682,4878.82721682,2845.98154314,4472.25528208,3659.11941261,2845.98154314,3252.55027788,6098.53102102,2845.98154314,2439.41280841,6098.53102102,6098.53102102,3659.11941261,4878.82721682,5285.39515155,4472.25528208,3659.11941261,3659.11941261,6098.53102102,2032.84407367,5691.96308629,1626.27533894,3659.11941261,1626.27533894,3252.55027788,1219.7066042,2032.84407367,3659.11941261,4065.68734735,813.137469469,3252.55027788,2845.98154314,2032.84407367,2439.41280841,0.0,1626.27533894,2845.98154314,813.137469469,1626.27533894,1626.27533894,2439.41280841,1219.7066042,3252.55027788,3252.55027788,3659.11941261,813.137469469,813.137469469,2439.41280841,406.568734735,813.137469469,1219.7066042,1219.7066042,1219.7066042,0.0,2845.98154314,813.137469469,1626.27533894,1626.27533894,1219.7066042,2032.84407367,813.137469469,1219.7066042,1626.27533894,1626.27533894,813.137469469,813.137469469,813.137469469,1219.7066042,406.568734735,1219.7066042,1219.7066042,406.568734735,406.568734735,813.137469469,406.568734735,406.568734735,813.137469469,0.0,1219.7066042,406.568734735,406.568734735,813.137469469,0.0,813.137469469,0.0,406.568734735,0.0,406.568734735,0.0,813.137469469,0.0,0.0,406.568734735,1219.7066042,406.568734735,406.568734735,0.0,406.568734735,0.0,0.0,813.137469469,406.568734735,406.568734735,406.568734735,0.0,0.0,0.0,406.568734735,0.0,0.0,0.0,406.568734735,406.568734735,0.0,406.568734735])

    # Creating weights for histo: y8_M_1
    y8_M_1_weights = numpy.array([0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,283.919809859,141.959877152,0.0,141.959877152,425.879687011,0.0,141.959877152,0.0,283.919809859,0.0,283.919809859,0.0,141.959877152,283.919809859,141.959877152,283.919809859,141.959877152,141.959877152,0.0,141.959877152,567.839508607,425.879687011,425.879687011,0.0,0.0,0.0,283.919809859,141.959877152,0.0,425.879687011,283.919809859,0.0,141.959877152,141.959877152,141.959877152,283.919809859,0.0,0.0,0.0,0.0,0.0,0.0,0.0,141.959877152,141.959877152,0.0,141.959877152,0.0,0.0,425.879687011,0.0,141.959877152,283.919809859,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,141.959877152,141.959877152,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,0.0,141.959877152,141.959877152,141.959877152,0.0,0.0,141.959877152,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,141.959877152,0.0,0.0,0.0])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(12,6),dpi=80)
    frame = gridspec.GridSpec(1,1,right=0.7)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y8_M_0_weights+y8_M_1_weights,\
             label="$signal4TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#ce5e60", edgecolor="#ce5e60", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y8_M_0_weights,\
             label="$signal1TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"M [ j_{1} , j_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y8_M_0_weights+y8_M_1_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y8_M_0_weights+y8_M_1_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Legend
    plt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_7.eps')

# Running!
if __name__ == '__main__':
    selection_7()
