def selection_3():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,1000.0,101,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([5.0,15.0,25.0,35.0,45.0,55.0,65.0,75.0,85.0,95.0,105.0,115.0,125.0,135.0,145.0,155.0,165.0,175.0,185.0,195.0,205.0,215.0,225.0,235.0,245.0,255.0,265.0,275.0,285.0,295.0,305.0,315.0,325.0,335.0,345.0,355.0,365.0,375.0,385.0,395.0,405.0,415.0,425.0,435.0,445.0,455.0,465.0,475.0,485.0,495.0,505.0,515.0,525.0,535.0,545.0,555.0,565.0,575.0,585.0,595.0,605.0,615.0,625.0,635.0,645.0,655.0,665.0,675.0,685.0,695.0,705.0,715.0,725.0,735.0,745.0,755.0,765.0,775.0,785.0,795.0,805.0,815.0,825.0,835.0,845.0,855.0,865.0,875.0,885.0,895.0,905.0,915.0,925.0,935.0,945.0,955.0,965.0,975.0,985.0,995.0])

    # Creating weights for histo: y4_PT_0
    y4_PT_0_weights = numpy.array([0.0,0.0,53667.0718078,42283.1535455,34964.9186627,23174.4204625,22361.2845866,17482.4573313,18295.5972072,17889.0292693,13010.202014,14636.4777658,12197.0661381,12197.0661381,9351.08257257,12603.6340761,9757.65051051,6911.67094494,6911.67094494,5691.96313113,5691.96313113,6911.67094494,4472.25531732,6505.09900701,3252.5503035,3659.11944144,3252.5503035,2032.84408969,2032.84408969,1219.70661381,2439.41282763,1626.27535175,2439.41282763,2439.41282763,2439.41282763,2032.84408969,1626.27535175,2032.84408969,1219.70661381,813.137475876,1219.70661381,2439.41282763,1626.27535175,1219.70661381,1219.70661381,0.0,406.568737938,406.568737938,406.568737938,406.568737938,0.0,813.137475876,406.568737938,813.137475876,406.568737938,0.0,0.0,813.137475876,0.0,0.0,406.568737938,0.0,0.0,406.568737938,0.0,0.0,0.0,0.0,0.0,0.0,406.568737938,0.0,406.568737938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,406.568737938,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])

    # Creating weights for histo: y4_PT_1
    y4_PT_1_weights = numpy.array([0.0,0.0,36477.7714118,24886.7050567,20113.9120869,19432.0839483,17386.6035327,14659.2909786,17727.515602,16022.9472557,12954.7226322,15682.0351864,11931.9824244,11931.9824244,12613.810563,9204.66987027,7500.10152392,8181.92966246,7841.01759319,5113.70503904,5795.53317758,5113.70503904,2727.31015415,6477.36131612,1704.56874635,3750.05156196,4090.96483123,2727.31015415,3750.05156196,2386.39648488,2727.31015415,2045.48241562,4090.96483123,2045.48241562,1704.56874635,1704.56874635,681.827338539,1022.74140781,1022.74140781,681.827338539,1022.74140781,1022.74140781,1363.65507708,340.913749269,340.913749269,1022.74140781,0.0,1022.74140781,1022.74140781,1704.56874635,0.0,340.913749269,681.827338539,681.827338539,340.913749269,340.913749269,0.0,0.0,0.0,681.827338539,340.913749269,0.0,340.913749269,0.0,0.0,340.913749269,340.913749269,340.913749269,340.913749269,340.913749269,0.0,0.0,0.0,0.0,0.0,340.913749269,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])

    # Creating weights for histo: y4_PT_2
    y4_PT_2_weights = numpy.array([0.0,0.0,11806.7683753,8323.73344462,6312.10606219,4926.00248772,4336.01866885,3881.09240851,3376.40816345,3248.46020273,2885.94071402,2267.52490387,1961.87099771,1762.84065881,1457.18675265,1478.5115461,1158.6412443,1371.88797883,1030.69288358,902.744922858,817.446149045,632.632205783,526.009038516,661.065397054,561.549827605,561.549827605,398.060757796,312.762023982,369.627846525,355.411410889,241.679765805,369.627846525,234.571527987,170.597467627,206.138616716,255.89620144,106.623407267,156.381031991,120.839882902,92.4069716312,99.5152094489,120.839882902,92.4069716312,78.1904959956,63.97406036,49.7575847245,42.6493869067,56.8658225423,78.1904959956,63.97406036,49.7575847245,35.5411410889,71.0822981778,21.3246854533,21.3246854533,71.0822981778,14.2164556356,42.6493869067,14.2164556356,28.4329112711,7.10822981778,7.10822981778,14.2164556356,14.2164556356,14.2164556356,14.2164556356,21.3246854533,14.2164556356,21.3246854533,21.3246854533,0.0,7.10822981778,21.3246854533,14.2164556356,0.0,0.0,14.2164556356,7.10822981778,7.10822981778,0.0,7.10822981778,14.2164556356,14.2164556356,0.0,0.0,0.0,0.0,7.10822981778,7.10822981778,14.2164556356,7.10822981778,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])

    # Creating weights for histo: y4_PT_3
    y4_PT_3_weights = numpy.array([0.0,0.0,1595.26459645,985.773168569,733.964674421,585.168618788,457.833771179,384.866463897,334.790925174,291.868989126,221.047842647,214.60956024,203.163715961,153.088137238,134.488650284,132.342569481,110.881601457,84.4131115611,65.0982243395,58.6599419323,50.0755787227,41.4911755131,30.0453392336,35.7682613733,27.1838781637,22.1763202915,18.5994949541,22.1763202915,16.4533981517,12.8765728144,15.0226696168,15.7380338843,7.15365067467,11.4458442795,7.15365067467,10.730476012,8.5843832096,4.2921896048,3.57682613733,2.86146066987,3.57682613733,5.00755787227,3.57682613733,2.1460956024,3.57682613733,0.715365067467,2.1460956024,1.43073053493,1.43073053493,1.43073053493,1.43073053493,2.1460956024,1.43073053493,2.1460956024,0.715365067467,0.715365067467,0.0,0.0,0.0,0.715365067467,0.0,0.0,0.0,1.43073053493,0.715365067467,0.715365067467,0.0,0.715365067467,0.0,0.715365067467,0.0,0.0,0.0,0.0,0.0,0.715365067467,0.715365067467,0.0,0.0,0.0,0.0,0.0,0.715365067467,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.715365067467,0.0,0.0,0.0])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(12,6),dpi=80)
    frame = gridspec.GridSpec(1,1,right=0.7)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y4_PT_0_weights+y4_PT_1_weights+y4_PT_2_weights+y4_PT_3_weights,\
             label="$signal100GeV4TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#0000ff", edgecolor="#0000ff", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y4_PT_0_weights+y4_PT_1_weights+y4_PT_2_weights,\
             label="$signal100GeV1p5TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#59d354", edgecolor="#59d354", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y4_PT_0_weights+y4_PT_1_weights,\
             label="$signal100GeV1TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#ce5e60", edgecolor="#ce5e60", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y4_PT_0_weights,\
             label="$signal1MeV$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"p_{T} [ j_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y4_PT_0_weights+y4_PT_1_weights+y4_PT_2_weights+y4_PT_3_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y4_PT_0_weights+y4_PT_1_weights+y4_PT_2_weights+y4_PT_3_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Legend
    plt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_3.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_3.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_3.eps')

# Running!
if __name__ == '__main__':
    selection_3()
