def selection_2():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(-3.2,3.2,65,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([-3.15,-3.05,-2.95,-2.85,-2.75,-2.65,-2.55,-2.45,-2.35,-2.25,-2.15,-2.05,-1.95,-1.85,-1.75,-1.65,-1.55,-1.45,-1.35,-1.25,-1.15,-1.05,-0.95,-0.85,-0.75,-0.65,-0.55,-0.45,-0.35,-0.25,-0.15,-0.05,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,1.05,1.15,1.25,1.35,1.45,1.55,1.65,1.75,1.85,1.95,2.05,2.15,2.25,2.35,2.45,2.55,2.65,2.75,2.85,2.95,3.05,3.15])

    # Creating weights for histo: y3_PHI_0
    y3_PHI_0_weights = numpy.array([1626.27534535,4878.82723604,6911.67091772,5691.96310871,4472.2552997,7318.23885405,4878.82723604,6505.09898138,6098.53104505,6911.67091772,7318.23885405,8944.5145994,5691.96310871,6098.53104505,6505.09898138,6098.53104505,6911.67091772,4065.68736336,5285.39517237,4878.82723604,7318.23885405,2845.98155435,5691.96310871,6505.09898138,5285.39517237,5691.96310871,8537.94666306,6098.53104505,4065.68736336,4065.68736336,6911.67091772,6505.09898138,7318.23885405,4472.2552997,6505.09898138,8944.5145994,7724.80679039,5285.39517237,6911.67091772,9757.65047207,7724.80679039,5285.39517237,7318.23885405,5691.96310871,6911.67091772,6098.53104505,7724.80679039,6911.67091772,5691.96310871,6098.53104505,7724.80679039,7724.80679039,8537.94666306,5691.96310871,6098.53104505,9351.08253574,6098.53104505,6505.09898138,7318.23885405,4878.82723604,8131.37472673,6911.67091772,9757.65047207,2439.41281802])

    # Creating weights for histo: y3_PHI_1
    y3_PHI_1_weights = numpy.array([1363.6550396,4772.7928386,5113.7048985,4772.7928386,5113.7048985,5795.5330183,4772.7928386,4090.9647188,7841.0173777,7500.1013178,8522.8454975,4431.8807787,5454.6209584,5113.7048985,5113.7048985,3750.0514589,4772.7928386,5454.6209584,5113.7048985,6477.3611381,4090.9647188,5795.5330183,6136.4490782,5795.5330183,3068.2237391,5454.6209584,4772.7928386,6477.3611381,8522.8454975,6136.4490782,4772.7928386,4772.7928386,4772.7928386,5795.5330183,5454.6209584,3409.137399,5795.5330183,5113.7048985,4431.8807787,4431.8807787,5113.7048985,8522.8454975,5113.7048985,2386.3964193,4431.8807787,4090.9647188,4772.7928386,5454.6209584,7500.1013178,3409.137399,5795.5330183,6818.273198,5454.6209584,4772.7928386,5795.5330183,6136.4490782,5113.7048985,5454.6209584,4431.8807787,5795.5330183,6136.4490782,7841.0173777,7500.1013178,2386.3964193])

    # Creating weights for histo: y3_PHI_2
    y3_PHI_2_weights = numpy.array([433.601879037,1052.01770652,1052.01770652,1208.39886289,1300.80563711,1123.10008669,995.15212238,1130.2080847,1236.83165496,1315.02203315,1101.77529264,1123.10008669,1115.99168867,1179.96567082,1023.58491445,895.636550142,1158.64127677,1144.42488074,1023.58491445,1350.56322323,1179.96567082,1194.18246686,1144.42488074,1073.34250057,1094.66729462,1236.83165496,1137.31648272,1187.07406884,1307.91403513,1222.61525892,1286.58924108,1101.77529264,1016.47651643,1137.31648272,1151.53287875,1286.58924108,1151.53287875,1194.18246686,1165.74927479,1101.77529264,1115.99168867,980.935326346,1151.53287875,1080.45049858,1165.74927479,1080.45049858,1151.53287875,1052.01770652,980.935326346,1052.01770652,1123.10008669,1059.12610453,1073.34250057,1108.88369065,1208.39886289,959.610932295,1215.50686091,1009.36851841,1165.74927479,1172.85767281,1059.12610453,973.827328329,1307.91403513,490.467863173])

    # Creating weights for histo: y3_PHI_3
    y3_PHI_3_weights = numpy.array([37.914355132,125.188929964,110.881604254,112.312324825,107.304762826,105.874042255,103.727961399,130.196451963,105.874042255,104.443321684,113.743085396,105.15868197,98.7203994002,128.050371106,115.889166252,110.166243968,123.042809107,103.012601113,116.604526538,123.042809107,118.035247109,122.327448822,106.589402541,124.473529678,114.458445681,109.450883683,117.319886823,106.589402541,100.866480257,104.443321684,117.319886823,118.035247109,110.881604254,99.4357596857,120.896728251,115.889166252,118.035247109,128.050371106,115.173805967,109.450883683,117.319886823,120.181367965,103.727961399,109.450883683,104.443321684,103.727961399,115.889166252,114.458445681,111.596964539,114.458445681,118.035247109,117.319886823,115.173805967,118.750607394,131.627212534,97.2896788292,106.589402541,134.488653676,107.304762826,127.335010821,110.881604254,116.604526538,120.181367965,57.2292228407])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(12,6),dpi=80)
    frame = gridspec.GridSpec(1,1,right=0.7)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights,\
             label="$signal100GeV4TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#0000ff", edgecolor="#0000ff", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights,\
             label="$signal100GeV1p5TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#59d354", edgecolor="#59d354", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights,\
             label="$signal100GeV1TeV$", histtype="stepfilled", rwidth=1.0,\
             color="#ce5e60", edgecolor="#ce5e60", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights,\
             label="$signal1MeV$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"\phi [ j_{1} ] ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Legend
    plt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_2.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_2.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_2.eps')

# Running!
if __name__ == '__main__':
    selection_2()
