def selection_9():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,4000.0,401,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([5.0,15.0,25.0,35.0,45.0,55.0,65.0,75.0,85.0,95.0,105.0,115.0,125.0,135.0,145.0,155.0,165.0,175.0,185.0,195.0,205.0,215.0,225.0,235.0,245.0,255.0,265.0,275.0,285.0,295.0,305.0,315.0,325.0,335.0,345.0,355.0,365.0,375.0,385.0,395.0,405.0,415.0,425.0,435.0,445.0,455.0,465.0,475.0,485.0,495.0,505.0,515.0,525.0,535.0,545.0,555.0,565.0,575.0,585.0,595.0,605.0,615.0,625.0,635.0,645.0,655.0,665.0,675.0,685.0,695.0,705.0,715.0,725.0,735.0,745.0,755.0,765.0,775.0,785.0,795.0,805.0,815.0,825.0,835.0,845.0,855.0,865.0,875.0,885.0,895.0,905.0,915.0,925.0,935.0,945.0,955.0,965.0,975.0,985.0,995.0,1005.0,1015.0,1025.0,1035.0,1045.0,1055.0,1065.0,1075.0,1085.0,1095.0,1105.0,1115.0,1125.0,1135.0,1145.0,1155.0,1165.0,1175.0,1185.0,1195.0,1205.0,1215.0,1225.0,1235.0,1245.0,1255.0,1265.0,1275.0,1285.0,1295.0,1305.0,1315.0,1325.0,1335.0,1345.0,1355.0,1365.0,1375.0,1385.0,1395.0,1405.0,1415.0,1425.0,1435.0,1445.0,1455.0,1465.0,1475.0,1485.0,1495.0,1505.0,1515.0,1525.0,1535.0,1545.0,1555.0,1565.0,1575.0,1585.0,1595.0,1605.0,1615.0,1625.0,1635.0,1645.0,1655.0,1665.0,1675.0,1685.0,1695.0,1705.0,1715.0,1725.0,1735.0,1745.0,1755.0,1765.0,1775.0,1785.0,1795.0,1805.0,1815.0,1825.0,1835.0,1845.0,1855.0,1865.0,1875.0,1885.0,1895.0,1905.0,1915.0,1925.0,1935.0,1945.0,1955.0,1965.0,1975.0,1985.0,1995.0,2005.0,2015.0,2025.0,2035.0,2045.0,2055.0,2065.0,2075.0,2085.0,2095.0,2105.0,2115.0,2125.0,2135.0,2145.0,2155.0,2165.0,2175.0,2185.0,2195.0,2205.0,2215.0,2225.0,2235.0,2245.0,2255.0,2265.0,2275.0,2285.0,2295.0,2305.0,2315.0,2325.0,2335.0,2345.0,2355.0,2365.0,2375.0,2385.0,2395.0,2405.0,2415.0,2425.0,2435.0,2445.0,2455.0,2465.0,2475.0,2485.0,2495.0,2505.0,2515.0,2525.0,2535.0,2545.0,2555.0,2565.0,2575.0,2585.0,2595.0,2605.0,2615.0,2625.0,2635.0,2645.0,2655.0,2665.0,2675.0,2685.0,2695.0,2705.0,2715.0,2725.0,2735.0,2745.0,2755.0,2765.0,2775.0,2785.0,2795.0,2805.0,2815.0,2825.0,2835.0,2845.0,2855.0,2865.0,2875.0,2885.0,2895.0,2905.0,2915.0,2925.0,2935.0,2945.0,2955.0,2965.0,2975.0,2985.0,2995.0,3005.0,3015.0,3025.0,3035.0,3045.0,3055.0,3065.0,3075.0,3085.0,3095.0,3105.0,3115.0,3125.0,3135.0,3145.0,3155.0,3165.0,3175.0,3185.0,3195.0,3205.0,3215.0,3225.0,3235.0,3245.0,3255.0,3265.0,3275.0,3285.0,3295.0,3305.0,3315.0,3325.0,3335.0,3345.0,3355.0,3365.0,3375.0,3385.0,3395.0,3405.0,3415.0,3425.0,3435.0,3445.0,3455.0,3465.0,3475.0,3485.0,3495.0,3505.0,3515.0,3525.0,3535.0,3545.0,3555.0,3565.0,3575.0,3585.0,3595.0,3605.0,3615.0,3625.0,3635.0,3645.0,3655.0,3665.0,3675.0,3685.0,3695.0,3705.0,3715.0,3725.0,3735.0,3745.0,3755.0,3765.0,3775.0,3785.0,3795.0,3805.0,3815.0,3825.0,3835.0,3845.0,3855.0,3865.0,3875.0,3885.0,3895.0,3905.0,3915.0,3925.0,3935.0,3945.0,3955.0,3965.0,3975.0,3985.0,3995.0])

    # Creating weights for histo: y10_M_0
    y10_M_0_weights = numpy.array([1.48657969593,3.34480381584,5.20302833575,5.94631638372,6.3179644077,15.2374409833,11.5209927435,14.1225049113,17.0956651032,10.4060566715,20.068825295,16.7240210792,22.2986934389,21.183757367,21.183757367,23.7852735349,19.6971772711,20.440469319,24.9002056068,24.5285615828,26.3867857028,21.927049415,25.2718536308,28.2450098227,33.0763941344,32.3331060865,21.555401391,36.4211983503,28.2450098227,32.3331060865,28.6166538466,31.2181700145,20.812113343,29.3599458946,34.1913302064,26.0151416788,31.5898140385,30.4748819666,22.2986934389,31.9614580625,32.7047501105,27.5017217747,28.2450098227,25.6434976548,28.6166538466,28.2450098227,31.9614580625,26.3867857028,29.3599458946,27.8733657987,33.0763941344,26.7584297267,22.2986934389,31.2181700145,30.4748819666,36.7928423743,28.6166538466,24.5285615828,32.7047501105,26.3867857028,31.9614580625,27.1300777507,31.2181700145,27.5017217747,28.2450098227,30.4748819666,21.183757367,26.0151416788,24.5285615828,26.0151416788,27.1300777507,24.1569175589,25.2718536308,26.7584297267,21.555401391,18.5822451991,23.4136255109,22.6703374629,19.6971772711,23.0419814869,25.2718536308,22.2986934389,24.5285615828,17.4673091272,23.0419814869,22.6703374629,23.7852735349,20.440469319,19.3255332471,24.9002056068,18.5822451991,16.7240210792,17.4673091272,15.9807290312,21.555401391,17.0956651032,21.927049415,13.7508608873,14.8657969593,21.927049415,17.0956651032,20.440469319,14.4941489353,18.2105971751,15.6090850073,22.2986934389,19.3255332471,18.5822451991,20.812113343,21.183757367,13.7508608873,18.5822451991,17.0956651032,15.9807290312,18.2105971751,12.6359248154,14.8657969593,13.7508608873,14.1225049113,16.3523730552,11.5209927435,19.6971772711,15.6090850073,15.2374409833,15.2374409833,10.0344126475,12.2642807914,15.6090850073,10.0344126475,14.8657969593,15.9807290312,16.3523730552,13.7508608873,10.4060566715,10.4060566715,11.5209927435,14.8657969593,10.7777006955,7.43289647965,14.4941489353,11.8926367674,8.17618852761,10.0344126475,10.0344126475,6.3179644077,8.5478325516,10.4060566715,8.5478325516,11.1493447195,8.5478325516,6.3179644077,7.80454050363,8.5478325516,8.5478325516,10.4060566715,6.68960843168,8.5478325516,5.20302833575,7.43289647965,10.0344126475,8.5478325516,8.17618852761,8.17618852761,10.7777006955,7.43289647965,7.06125245567,8.17618852761,7.80454050363,8.17618852761,7.43289647965,5.57467235974,6.3179644077,9.66276862354,6.3179644077,7.80454050363,5.94631638372,6.3179644077,6.3179644077,7.80454050363,4.08809226381,6.68960843168,5.20302833575,3.71644863982,7.43289647965,5.57467235974,5.57467235974,5.57467235974,2.22986934389,5.20302833575,3.34480381584,3.34480381584,5.20302833575,5.20302833575,6.68960843168,5.57467235974,4.45974028779,2.60151416788,3.34480381584,4.45974028779,3.71644863982,6.3179644077,4.83138431177,4.08809226381,3.71644863982,4.08809226381,5.94631638372,1.85822451991,4.83138431177,3.71644863982,4.08809226381,4.45974028779,4.83138431177,2.97315899186,4.08809226381,3.34480381584,5.94631638372,2.97315899186,5.20302833575,4.83138431177,3.34480381584,2.60151416788,4.45974028779,1.85822451991,1.85822451991,2.60151416788,3.71644863982,3.71644863982,2.22986934389,0.743289647965,2.60151416788,3.71644863982,2.22986934389,2.97315899186,1.11493447195,3.71644863982,2.97315899186,4.45974028779,1.85822451991,2.97315899186,3.71644863982,0.743289647965,2.22986934389,2.22986934389,1.85822451991,2.97315899186,4.08809226381,1.85822451991,2.22986934389,2.22986934389,1.11493447195,2.22986934389,3.71644863982,3.34480381584,1.48657969593,2.22986934389,2.22986934389,3.34480381584,3.34480381584,0.743289647965,2.60151416788,1.48657969593,2.22986934389,1.11493447195,1.11493447195,1.11493447195,2.60151416788,3.71644863982,1.11493447195,2.60151416788,0.743289647965,1.85822451991,1.85822451991,0.743289647965,0.743289647965,2.60151416788,0.743289647965,1.48657969593,2.22986934389,1.11493447195,1.85822451991,0.743289647965,1.85822451991,2.60151416788,1.85822451991,1.85822451991,0.743289647965,0.743289647965,1.85822451991,1.11493447195,1.11493447195,0.743289647965,0.743289647965,1.11493447195,0.0,1.48657969593,1.48657969593,0.743289647965,1.11493447195,2.22986934389,1.48657969593,1.48657969593,1.48657969593,0.743289647965,1.11493447195,1.48657969593,1.11493447195,1.11493447195,0.743289647965,2.22986934389,1.11493447195,0.743289647965,0.743289647965,1.11493447195,0.743289647965,0.371644863982,1.48657969593,0.743289647965,0.371644863982,1.48657969593,0.371644863982,0.0,0.743289647965,0.371644863982,1.85822451991,0.743289647965,0.371644863982,1.11493447195,1.85822451991,0.743289647965,0.743289647965,0.371644863982,0.743289647965,0.371644863982,0.743289647965,0.0,1.48657969593,0.743289647965,1.48657969593,0.0,0.371644863982,0.371644863982,0.371644863982,0.371644863982,0.743289647965,1.11493447195,0.743289647965,0.371644863982,1.11493447195,1.11493447195,0.743289647965,0.0,0.371644863982,0.371644863982,0.371644863982,0.743289647965,0.0,0.371644863982,0.0,0.743289647965,1.11493447195,0.371644863982,0.743289647965,1.11493447195,0.371644863982,0.371644863982,0.0,0.0,0.743289647965,0.371644863982,0.0,0.0,0.371644863982,0.0,0.743289647965,0.371644863982,0.743289647965,0.0,1.48657969593,0.371644863982,0.0,0.371644863982,0.0,0.743289647965,0.371644863982,0.371644863982,0.371644863982,0.371644863982,0.371644863982,0.0,0.743289647965,0.0,0.371644863982,0.371644863982,0.371644863982,0.0,0.0,0.743289647965,0.0,0.371644863982,0.743289647965])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y10_M_0_weights,\
             label="$signal$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"M [ a_{1} , a_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y10_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y10_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_9.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_9.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_9.eps')

# Running!
if __name__ == '__main__':
    selection_9()
