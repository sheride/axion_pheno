def selection_11():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,2000.0,401,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([2.5,7.5,12.5,17.5,22.5,27.5,32.5,37.5,42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5,102.5,107.5,112.5,117.5,122.5,127.5,132.5,137.5,142.5,147.5,152.5,157.5,162.5,167.5,172.5,177.5,182.5,187.5,192.5,197.5,202.5,207.5,212.5,217.5,222.5,227.5,232.5,237.5,242.5,247.5,252.5,257.5,262.5,267.5,272.5,277.5,282.5,287.5,292.5,297.5,302.5,307.5,312.5,317.5,322.5,327.5,332.5,337.5,342.5,347.5,352.5,357.5,362.5,367.5,372.5,377.5,382.5,387.5,392.5,397.5,402.5,407.5,412.5,417.5,422.5,427.5,432.5,437.5,442.5,447.5,452.5,457.5,462.5,467.5,472.5,477.5,482.5,487.5,492.5,497.5,502.5,507.5,512.5,517.5,522.5,527.5,532.5,537.5,542.5,547.5,552.5,557.5,562.5,567.5,572.5,577.5,582.5,587.5,592.5,597.5,602.5,607.5,612.5,617.5,622.5,627.5,632.5,637.5,642.5,647.5,652.5,657.5,662.5,667.5,672.5,677.5,682.5,687.5,692.5,697.5,702.5,707.5,712.5,717.5,722.5,727.5,732.5,737.5,742.5,747.5,752.5,757.5,762.5,767.5,772.5,777.5,782.5,787.5,792.5,797.5,802.5,807.5,812.5,817.5,822.5,827.5,832.5,837.5,842.5,847.5,852.5,857.5,862.5,867.5,872.5,877.5,882.5,887.5,892.5,897.5,902.5,907.5,912.5,917.5,922.5,927.5,932.5,937.5,942.5,947.5,952.5,957.5,962.5,967.5,972.5,977.5,982.5,987.5,992.5,997.5,1002.5,1007.5,1012.5,1017.5,1022.5,1027.5,1032.5,1037.5,1042.5,1047.5,1052.5,1057.5,1062.5,1067.5,1072.5,1077.5,1082.5,1087.5,1092.5,1097.5,1102.5,1107.5,1112.5,1117.5,1122.5,1127.5,1132.5,1137.5,1142.5,1147.5,1152.5,1157.5,1162.5,1167.5,1172.5,1177.5,1182.5,1187.5,1192.5,1197.5,1202.5,1207.5,1212.5,1217.5,1222.5,1227.5,1232.5,1237.5,1242.5,1247.5,1252.5,1257.5,1262.5,1267.5,1272.5,1277.5,1282.5,1287.5,1292.5,1297.5,1302.5,1307.5,1312.5,1317.5,1322.5,1327.5,1332.5,1337.5,1342.5,1347.5,1352.5,1357.5,1362.5,1367.5,1372.5,1377.5,1382.5,1387.5,1392.5,1397.5,1402.5,1407.5,1412.5,1417.5,1422.5,1427.5,1432.5,1437.5,1442.5,1447.5,1452.5,1457.5,1462.5,1467.5,1472.5,1477.5,1482.5,1487.5,1492.5,1497.5,1502.5,1507.5,1512.5,1517.5,1522.5,1527.5,1532.5,1537.5,1542.5,1547.5,1552.5,1557.5,1562.5,1567.5,1572.5,1577.5,1582.5,1587.5,1592.5,1597.5,1602.5,1607.5,1612.5,1617.5,1622.5,1627.5,1632.5,1637.5,1642.5,1647.5,1652.5,1657.5,1662.5,1667.5,1672.5,1677.5,1682.5,1687.5,1692.5,1697.5,1702.5,1707.5,1712.5,1717.5,1722.5,1727.5,1732.5,1737.5,1742.5,1747.5,1752.5,1757.5,1762.5,1767.5,1772.5,1777.5,1782.5,1787.5,1792.5,1797.5,1802.5,1807.5,1812.5,1817.5,1822.5,1827.5,1832.5,1837.5,1842.5,1847.5,1852.5,1857.5,1862.5,1867.5,1872.5,1877.5,1882.5,1887.5,1892.5,1897.5,1902.5,1907.5,1912.5,1917.5,1922.5,1927.5,1932.5,1937.5,1942.5,1947.5,1952.5,1957.5,1962.5,1967.5,1972.5,1977.5,1982.5,1987.5,1992.5,1997.5])

    # Creating weights for histo: y12_PT_0
    y12_PT_0_weights = numpy.array([28.2961777113,97.4646058943,128.904807796,201.217252169,191.785211598,169.777050268,264.097655972,254.665575401,301.825858253,270.385696352,295.537857873,339.554100535,298.681858063,292.393817683,336.410100345,279.817736922,361.562261866,377.282342817,355.274221486,311.257938824,339.554100535,314.401939014,320.689979394,339.554100535,386.714423387,345.842140915,352.130181296,430.730826049,314.401939014,348.986181105,355.274221486,386.714423387,323.834019584,380.426383007,295.537857873,286.105777303,295.537857873,323.834019584,342.698140725,386.714423387,298.681858063,330.122059965,292.393817683,314.401939014,308.113898634,320.689979394,289.249817493,260.953615782,292.393817683,242.089494641,289.249817493,282.961777113,279.817736922,251.521575211,279.817736922,216.93733312,276.673736732,229.51341388,289.249817493,273.529696542,317.545979204,232.65745407,220.08137331,279.817736922,216.93733312,232.65745407,273.529696542,229.51341388,238.945494451,210.649292739,226.36941369,176.065090648,204.361252359,198.073251979,207.505292549,198.073251979,144.624888746,150.912929127,216.93733312,163.489009887,194.929211789,141.480888556,179.209130838,194.929211789,147.768928937,150.912929127,194.929211789,172.921090458,160.345009697,141.480888556,169.777050268,157.200969507,157.200969507,160.345009697,150.912929127,144.624888746,150.912929127,116.328727035,166.633050077,147.768928937,135.192848176,122.616767415,132.048807986,116.328727035,122.616767415,100.608606084,110.040686655,122.616767415,94.3206057042,113.184686845,88.0325653239,103.752646275,97.4646058943,103.752646275,113.184686845,84.8885251338,94.3206057042,94.3206057042,78.6004847535,72.3124443732,88.0325653239,97.4646058943,84.8885251338,91.176565514,78.6004847535,94.3206057042,25.1521575211,72.3124443732,69.1684441831,56.5923634225,47.1602828521,50.3043230422,66.0244039929,50.3043230422,69.1684441831,50.3043230422,94.3206057042,53.4483232324,50.3043230422,28.2961777113,62.8804038028,62.8804038028,50.3043230422,40.8722424718,56.5923634225,47.1602828521,53.4483232324,47.1602828521,66.0244039929,53.4483232324,31.4401939014,31.4401939014,37.7282342817,44.0162826619,59.7363636126,25.1521575211,28.2961777113,44.0162826619,31.4401939014,37.7282342817,31.4401939014,31.4401939014,31.4401939014,31.4401939014,44.0162826619,53.4483232324,56.5923634225,44.0162826619,25.1521575211,37.7282342817,34.5842140915,28.2961777113,15.7200969507,28.2961777113,34.5842140915,31.4401939014,22.008137331,31.4401939014,28.2961777113,12.5760767606,31.4401939014,22.008137331,18.8641171408,22.008137331,25.1521575211,28.2961777113,22.008137331,22.008137331,15.7200969507,18.8641171408,22.008137331,22.008137331,22.008137331,22.008137331,31.4401939014,15.7200969507,25.1521575211,31.4401939014,9.43206057042,6.28804038028,12.5760767606,9.43206057042,6.28804038028,12.5760767606,25.1521575211,22.008137331,18.8641171408,3.14401939014,6.28804038028,6.28804038028,18.8641171408,18.8641171408,6.28804038028,34.5842140915,22.008137331,6.28804038028,12.5760767606,3.14401939014,22.008137331,6.28804038028,15.7200969507,6.28804038028,9.43206057042,9.43206057042,9.43206057042,9.43206057042,15.7200969507,6.28804038028,6.28804038028,9.43206057042,9.43206057042,3.14401939014,9.43206057042,9.43206057042,3.14401939014,12.5760767606,6.28804038028,9.43206057042,15.7200969507,22.008137331,3.14401939014,3.14401939014,6.28804038028,3.14401939014,0.0,6.28804038028,3.14401939014,9.43206057042,6.28804038028,3.14401939014,0.0,0.0,0.0,9.43206057042,6.28804038028,6.28804038028,3.14401939014,6.28804038028,6.28804038028,0.0,0.0,9.43206057042,3.14401939014,3.14401939014,6.28804038028,0.0,3.14401939014,3.14401939014,6.28804038028,6.28804038028,3.14401939014,3.14401939014,3.14401939014,6.28804038028,6.28804038028,0.0,6.28804038028,3.14401939014,0.0,6.28804038028,3.14401939014,0.0,0.0,3.14401939014,0.0,9.43206057042,6.28804038028,12.5760767606,3.14401939014,3.14401939014,9.43206057042,6.28804038028,3.14401939014,3.14401939014,0.0,6.28804038028,0.0,6.28804038028,3.14401939014,0.0,3.14401939014,3.14401939014,3.14401939014,0.0,3.14401939014,0.0,0.0,3.14401939014,3.14401939014,0.0,9.43206057042,0.0,6.28804038028,0.0,0.0,0.0,3.14401939014,0.0,0.0,0.0,3.14401939014,6.28804038028,0.0,0.0,0.0,3.14401939014,3.14401939014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.14401939014,0.0,3.14401939014,0.0,3.14401939014,6.28804038028,0.0,3.14401939014,0.0,0.0,0.0,3.14401939014,0.0,0.0,3.14401939014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.14401939014,0.0,0.0,0.0,0.0,3.14401939014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.14401939014,0.0,0.0,3.14401939014,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,3.14401939014,0.0])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y12_PT_0_weights,\
             label="$signal$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"p_{T} [ a_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y12_PT_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y12_PT_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_11.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_11.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_11.eps')

# Running!
if __name__ == '__main__':
    selection_11()
