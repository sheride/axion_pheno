def selection_7():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,3000.0,161,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([9.375,28.125,46.875,65.625,84.375,103.125,121.875,140.625,159.375,178.125,196.875,215.625,234.375,253.125,271.875,290.625,309.375,328.125,346.875,365.625,384.375,403.125,421.875,440.625,459.375,478.125,496.875,515.625,534.375,553.125,571.875,590.625,609.375,628.125,646.875,665.625,684.375,703.125,721.875,740.625,759.375,778.125,796.875,815.625,834.375,853.125,871.875,890.625,909.375,928.125,946.875,965.625,984.375,1003.125,1021.875,1040.625,1059.375,1078.125,1096.875,1115.625,1134.375,1153.125,1171.875,1190.625,1209.375,1228.125,1246.875,1265.625,1284.375,1303.125,1321.875,1340.625,1359.375,1378.125,1396.875,1415.625,1434.375,1453.125,1471.875,1490.625,1509.375,1528.125,1546.875,1565.625,1584.375,1603.125,1621.875,1640.625,1659.375,1678.125,1696.875,1715.625,1734.375,1753.125,1771.875,1790.625,1809.375,1828.125,1846.875,1865.625,1884.375,1903.125,1921.875,1940.625,1959.375,1978.125,1996.875,2015.625,2034.375,2053.125,2071.875,2090.625,2109.375,2128.125,2146.875,2165.625,2184.375,2203.125,2221.875,2240.625,2259.375,2278.125,2296.875,2315.625,2334.375,2353.125,2371.875,2390.625,2409.375,2428.125,2446.875,2465.625,2484.375,2503.125,2521.875,2540.625,2559.375,2578.125,2596.875,2615.625,2634.375,2653.125,2671.875,2690.625,2709.375,2728.125,2746.875,2765.625,2784.375,2803.125,2821.875,2840.625,2859.375,2878.125,2896.875,2915.625,2934.375,2953.125,2971.875,2990.625])

    # Creating weights for histo: y8_M_0
    y8_M_0_weights = numpy.array([0.0,9.4320608078,44.0162837697,44.0162837697,260.953622349,163.489014002,220.081378849,251.521581541,276.673743695,298.68186558,308.113906388,323.834027734,405.578434735,364.706271235,358.418230696,418.154435812,440.162837697,383.570392851,389.858433389,443.306837967,377.282352312,455.882839044,430.73083689,477.890840929,459.026839313,421.298436082,484.178841467,374.138352043,411.866435274,396.146473928,405.578434735,459.026839313,377.282352312,389.858433389,424.442836351,408.722435005,399.290474197,437.018837428,396.146473928,396.146473928,424.442836351,336.410108812,408.722435005,411.866435274,386.71443312,449.594838505,358.418230696,345.842149619,345.842149619,380.426392581,348.986189889,330.122068273,355.274230427,276.673743695,333.266068542,314.401946927,282.961784234,276.673743695,270.385703157,245.233541003,314.401946927,248.377541272,232.657459926,235.801460195,298.68186558,238.945500464,194.929216695,301.82586585,260.953622349,229.513419656,198.073256964,301.82586585,238.945500464,210.649298041,176.065095079,169.77705454,194.929216695,176.065095079,182.353135617,185.497175887,116.328729963,160.345013733,147.768932656,166.633054271,179.209135348,150.912932925,163.489014002,160.345013733,166.633054271,172.92109481,122.616770501,135.192851578,128.90481104,119.472730232,113.184689694,81.7445270009,97.4646083473,110.040689424,113.184689694,81.7445270009,113.184689694,116.328729963,66.0244056546,78.6004867317,103.752648886,81.7445270009,103.752648886,91.1765678087,81.7445270009,91.1765678087,94.320608078,91.1765678087,59.7363651161,78.6004867317,81.7445270009,56.5923648468,56.5923648468,56.5923648468,56.5923648468,69.1684459239,56.5923648468,75.4564864624,50.3043243083,50.3043243083,47.160284039,40.8722435005,28.2961784234,31.4401946927,37.7282352312,47.160284039,37.7282352312,50.3043243083,50.3043243083,47.160284039,37.7282352312,34.5842149619,25.1521581541,31.4401946927,28.2961784234,40.8722435005,34.5842149619,31.4401946927,34.5842149619,18.8641176156,28.2961784234,34.5842149619,37.7282352312,18.8641176156,28.2961784234,31.4401946927,25.1521581541,15.7200973463,18.8641176156,18.8641176156,31.4401946927,22.0081378849,34.5842149619,15.7200973463,12.5760770771,18.8641176156])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y8_M_0_weights,\
             label="$signal$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"M [ j_{1} , j_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y8_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y8_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_7.eps')

# Running!
if __name__ == '__main__':
    selection_7()
