def selection_7():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,8000.0,161,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([25.0,75.0,125.0,175.0,225.0,275.0,325.0,375.0,425.0,475.0,525.0,575.0,625.0,675.0,725.0,775.0,825.0,875.0,925.0,975.0,1025.0,1075.0,1125.0,1175.0,1225.0,1275.0,1325.0,1375.0,1425.0,1475.0,1525.0,1575.0,1625.0,1675.0,1725.0,1775.0,1825.0,1875.0,1925.0,1975.0,2025.0,2075.0,2125.0,2175.0,2225.0,2275.0,2325.0,2375.0,2425.0,2475.0,2525.0,2575.0,2625.0,2675.0,2725.0,2775.0,2825.0,2875.0,2925.0,2975.0,3025.0,3075.0,3125.0,3175.0,3225.0,3275.0,3325.0,3375.0,3425.0,3475.0,3525.0,3575.0,3625.0,3675.0,3725.0,3775.0,3825.0,3875.0,3925.0,3975.0,4025.0,4075.0,4125.0,4175.0,4225.0,4275.0,4325.0,4375.0,4425.0,4475.0,4525.0,4575.0,4625.0,4675.0,4725.0,4775.0,4825.0,4875.0,4925.0,4975.0,5025.0,5075.0,5125.0,5175.0,5225.0,5275.0,5325.0,5375.0,5425.0,5475.0,5525.0,5575.0,5625.0,5675.0,5725.0,5775.0,5825.0,5875.0,5925.0,5975.0,6025.0,6075.0,6125.0,6175.0,6225.0,6275.0,6325.0,6375.0,6425.0,6475.0,6525.0,6575.0,6625.0,6675.0,6725.0,6775.0,6825.0,6875.0,6925.0,6975.0,7025.0,7075.0,7125.0,7175.0,7225.0,7275.0,7325.0,7375.0,7425.0,7475.0,7525.0,7575.0,7625.0,7675.0,7725.0,7775.0,7825.0,7875.0,7925.0,7975.0])

    # Creating weights for histo: y8_M_0
    y8_M_0_weights = numpy.array([0.0,0.0,1704.56872032,4772.7928969,6477.36121722,7841.01747347,6477.36121722,14659.2907548,8863.75766567,10568.325986,9545.58579379,13636.5505626,10568.325986,16363.8590751,11591.0661782,10568.325986,15000.2068188,11931.9822422,11931.9822422,9545.58579379,10909.2420501,9545.58579379,7841.01747347,9886.49785786,8522.8456016,7841.01747347,9886.49785786,5795.53308909,6477.36121722,6136.44915315,6818.27328128,7159.18934535,4090.96476877,6136.44915315,3409.13744064,3750.0515047,2727.31011251,3068.22377658,2727.31011251,3409.13744064,681.827328128,2045.48238438,1022.74139219,1704.56872032,4090.96476877,2045.48238438,1704.56872032,1704.56872032,681.827328128,1704.56872032,1022.74139219,681.827328128,1363.65505626,340.913744064,0.0,681.827328128,681.827328128,681.827328128,1022.74139219,1022.74139219,1022.74139219,1022.74139219,340.913744064,681.827328128,681.827328128,340.913744064,340.913744064,0.0,0.0,0.0,1704.56872032,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,340.913744064,0.0,0.0,340.913744064,0.0,0.0,0.0,340.913744064,0.0,0.0,340.913744064,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y8_M_0_weights,\
             label="$signal$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"M [ j_{1} , j_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y8_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y8_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_7.eps')

# Running!
if __name__ == '__main__':
    selection_7()
