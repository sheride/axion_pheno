def selection_11():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,2000.0,401,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([2.5,7.5,12.5,17.5,22.5,27.5,32.5,37.5,42.5,47.5,52.5,57.5,62.5,67.5,72.5,77.5,82.5,87.5,92.5,97.5,102.5,107.5,112.5,117.5,122.5,127.5,132.5,137.5,142.5,147.5,152.5,157.5,162.5,167.5,172.5,177.5,182.5,187.5,192.5,197.5,202.5,207.5,212.5,217.5,222.5,227.5,232.5,237.5,242.5,247.5,252.5,257.5,262.5,267.5,272.5,277.5,282.5,287.5,292.5,297.5,302.5,307.5,312.5,317.5,322.5,327.5,332.5,337.5,342.5,347.5,352.5,357.5,362.5,367.5,372.5,377.5,382.5,387.5,392.5,397.5,402.5,407.5,412.5,417.5,422.5,427.5,432.5,437.5,442.5,447.5,452.5,457.5,462.5,467.5,472.5,477.5,482.5,487.5,492.5,497.5,502.5,507.5,512.5,517.5,522.5,527.5,532.5,537.5,542.5,547.5,552.5,557.5,562.5,567.5,572.5,577.5,582.5,587.5,592.5,597.5,602.5,607.5,612.5,617.5,622.5,627.5,632.5,637.5,642.5,647.5,652.5,657.5,662.5,667.5,672.5,677.5,682.5,687.5,692.5,697.5,702.5,707.5,712.5,717.5,722.5,727.5,732.5,737.5,742.5,747.5,752.5,757.5,762.5,767.5,772.5,777.5,782.5,787.5,792.5,797.5,802.5,807.5,812.5,817.5,822.5,827.5,832.5,837.5,842.5,847.5,852.5,857.5,862.5,867.5,872.5,877.5,882.5,887.5,892.5,897.5,902.5,907.5,912.5,917.5,922.5,927.5,932.5,937.5,942.5,947.5,952.5,957.5,962.5,967.5,972.5,977.5,982.5,987.5,992.5,997.5,1002.5,1007.5,1012.5,1017.5,1022.5,1027.5,1032.5,1037.5,1042.5,1047.5,1052.5,1057.5,1062.5,1067.5,1072.5,1077.5,1082.5,1087.5,1092.5,1097.5,1102.5,1107.5,1112.5,1117.5,1122.5,1127.5,1132.5,1137.5,1142.5,1147.5,1152.5,1157.5,1162.5,1167.5,1172.5,1177.5,1182.5,1187.5,1192.5,1197.5,1202.5,1207.5,1212.5,1217.5,1222.5,1227.5,1232.5,1237.5,1242.5,1247.5,1252.5,1257.5,1262.5,1267.5,1272.5,1277.5,1282.5,1287.5,1292.5,1297.5,1302.5,1307.5,1312.5,1317.5,1322.5,1327.5,1332.5,1337.5,1342.5,1347.5,1352.5,1357.5,1362.5,1367.5,1372.5,1377.5,1382.5,1387.5,1392.5,1397.5,1402.5,1407.5,1412.5,1417.5,1422.5,1427.5,1432.5,1437.5,1442.5,1447.5,1452.5,1457.5,1462.5,1467.5,1472.5,1477.5,1482.5,1487.5,1492.5,1497.5,1502.5,1507.5,1512.5,1517.5,1522.5,1527.5,1532.5,1537.5,1542.5,1547.5,1552.5,1557.5,1562.5,1567.5,1572.5,1577.5,1582.5,1587.5,1592.5,1597.5,1602.5,1607.5,1612.5,1617.5,1622.5,1627.5,1632.5,1637.5,1642.5,1647.5,1652.5,1657.5,1662.5,1667.5,1672.5,1677.5,1682.5,1687.5,1692.5,1697.5,1702.5,1707.5,1712.5,1717.5,1722.5,1727.5,1732.5,1737.5,1742.5,1747.5,1752.5,1757.5,1762.5,1767.5,1772.5,1777.5,1782.5,1787.5,1792.5,1797.5,1802.5,1807.5,1812.5,1817.5,1822.5,1827.5,1832.5,1837.5,1842.5,1847.5,1852.5,1857.5,1862.5,1867.5,1872.5,1877.5,1882.5,1887.5,1892.5,1897.5,1902.5,1907.5,1912.5,1917.5,1922.5,1927.5,1932.5,1937.5,1942.5,1947.5,1952.5,1957.5,1962.5,1967.5,1972.5,1977.5,1982.5,1987.5,1992.5,1997.5])

    # Creating weights for histo: y12_PT_0
    y12_PT_0_weights = numpy.array([6.10728538523,13.1966203768,17.7109033593,20.7669785103,23.3022277452,24.9555399254,25.9031953297,26.9341939137,27.6234850616,28.1997318536,28.3347742677,28.4554697745,28.0699660952,28.4342592171,28.3695762113,28.0910527311,27.9444336539,28.283330871,27.6746566305,27.1873174915,26.697591865,27.1154230561,26.7295795921,26.1678076264,25.9934181492,25.7662501215,25.3485428519,24.8745432586,24.7439820044,24.0388568916,24.1686106576,23.5973527038,23.0304679784,22.9728125187,22.3921964957,22.1184020185,21.3656311022,21.4025796853,21.2820680619,21.054564247,20.6116049814,19.8678763343,20.0839913671,19.0224921136,18.9186299383,18.9207765778,18.6910461741,18.7834715976,18.3834371275,17.6667873187,17.3575353134,16.6469136841,16.7145708051,16.4802752945,16.1013714325,15.7254696678,15.9318508695,15.3350970742,15.1471282033,14.993705438,14.7364444823,14.3767044748,14.1714985282,14.19486372,13.9818147441,13.6192365353,13.412259711,13.1335443525,13.1153358925,12.7348330438,12.732238688,12.4466276997,12.0958580071,12.0238476451,11.7147875181,11.5058919099,11.2110227891,11.3017093147,10.9445236883,10.9886956934,10.5819134998,10.224176223,10.5074247086,10.256951451,9.97818412541,9.89473301423,9.80167199352,9.79685504635,9.36733126568,9.50440039536,9.23046600678,8.99552690416,9.04907296826,8.70748945368,9.04678241995,8.6822534475,8.32238152356,8.35022387791,8.31799630278,8.10639440973,7.93260455255,7.92995423224,7.60246978209,7.28218876661,7.59607383565,7.37728849525,7.15678824171,7.35190058535,6.98956622203,7.04749350945,6.82691330658,6.70409114759,6.80172127254,6.61292092855,6.53651735085,6.42538778145,6.40193464534,6.14674837477,5.98875250782,5.95873952915,6.06048304715,5.93526240824,5.70292965379,5.48464399671,5.38955626048,5.28521039177,5.3106422738,5.31989241134,5.36430426444,4.95051051453,5.03175102673,5.03656797389,4.85040995527,4.74430919876,4.8582170074,4.62550849109,4.47705457674,4.53264734371,4.46992309646,4.34231597004,4.34471444996,4.51410709397,4.30049047779,4.34473443729,4.2077732392,4.00084438452,4.06390441895,3.90571427514,3.82001179081,3.86630645064,3.71083538355,3.66213824634,3.78266985701,3.7571216487,3.48061968737,3.5087746436,3.35081795182,3.51354362116,3.47861775613,3.39508029967,3.2997335276,3.40867048662,3.14644187927,3.26494277694,3.2162016676,3.01647824633,3.08591583886,2.95362687964,2.88627716388,2.92375780977,2.93061266536,2.88874999667,2.70293735916,2.87936114704,2.53342958812,2.63991170294,2.61482520201,2.53358429007,2.41491389981,2.50779943174,2.57063320957,2.41980519986,2.36628152156,2.41734236073,2.41038477024,2.32672778953,2.38240650203,2.22005499556,2.12707632266,2.21075089222,2.1245934962,2.17814315803,2.13847869618,2.00406948072,2.02479994237,2.02716284483,1.79490524275,1.98795369442,1.85295805062,1.9133793574,1.87151868744,1.92727774902,1.80418096408,1.87656269071,1.91572946797,1.8298474974,1.66498198423,1.59787691341,1.83667596972,1.71609558995,1.66254512863,1.48618130275,1.74169776406,1.59989523426,1.63473235554,1.42346185246,1.44445774589,1.46999715978,1.53035570634,1.49302776367,1.40485044781,1.37478710106,1.30969235617,1.27013102895,1.30723591299,1.25160477034,1.33066626353,1.38859754841,1.27021737423,1.2656054971,1.1773918043,1.23300176037,1.21916492974,1.20987401804,1.16117048488,1.1425758696,1.08451746527,1.18876779453,1.06358073435,1.07739238094,1.13110873712,1.00556790115,0.979790638005,1.02626438433,1.009973509,1.08435396889,1.0518661587,0.949944753434,0.938122246185,0.921823775668,0.910194745799,0.891742440319,0.900925820167,0.891587738364,0.917176720833,0.940443974743,0.828964227272,0.903253944672,0.840603250807,0.801270178931,0.761601719614,0.791836157932,0.775525295268,0.812719722553,0.780178346304,0.798768964126,0.789429683083,0.71751326156,0.736094685209,0.719870167823,0.773336282599,0.661907302953,0.70364764917,0.647688714269,0.675735339157,0.678054269489,0.615441551556,0.631722033474,0.599193848864,0.603695795665,0.729093522337,0.675666182986,0.594413678393,0.552623363844,0.652503662699,0.552709309375,0.603798130808,0.543394013131,0.564303961031,0.555010251106,0.578167974434,0.626998227281,0.513155577347,0.478295270766,0.554949889362,0.485324016157,0.434283164322,0.510887814587,0.483014279999,0.513125596348,0.438937014851,0.522495657883,0.464389283964,0.455165129957,0.46667543507,0.378472935176,0.434295956215,0.438817890349,0.445814256261,0.434329534934,0.371628552941,0.406297700672,0.359926969055,0.334305487183,0.369185221451,0.353004316425,0.38313873813,0.285624499737,0.376241869159,0.392467745684,0.343652283463,0.332109039226,0.325092925829,0.37855008628,0.346002833755,0.352911335353,0.313481764636,0.28787927073,0.362304862017,0.313456260799,0.283289459615,0.320453546129,0.311170989136,0.329773879181,0.271671302856,0.267036520242,0.267082611031,0.255411567789,0.21823321032,0.287944149612,0.22526931105,0.234559862976,0.208927987692,0.232186447176,0.283223301544,0.220586838661,0.276302567698,0.208974438253,0.241479837303,0.260032719042,0.197342250385,0.20666817989,0.21132546824,0.201946572304,0.22057500616,0.197416883085,0.222935350244,0.222965651041,0.22292031977,0.190395612956,0.236816033083,0.176502577946,0.195007130315,0.183464885444,0.169527318657,0.183451374007,0.167173770266,0.169505772312,0.190406805863,0.185753355081,0.150911157023,0.18113967909,0.157880779885,0.174140714825,0.155605022192,0.1463402939,0.160206346011,0.111490580605,0.127670925987,0.15096648196,0.120792965032,0.150908998391,0.127761428629,0.164905607759,0.143912912301,0.109127598193,0.125433703871,0.130054415402,0.123144914437,0.134710384588,0.132408043743,0.167180246161,0.14859838279,0.113790043275,0.120708418615,0.134721137773,0.127642344101,0.118438777046,0.0998543153222,0.125450653129])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y12_PT_0_weights,\
             label="$signal$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"p_{T} [ a_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y12_PT_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y12_PT_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_11.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_11.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_11.eps')

# Running!
if __name__ == '__main__':
    selection_11()
