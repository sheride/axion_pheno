def selection_7():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(0.0,3000.0,161,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([9.375,28.125,46.875,65.625,84.375,103.125,121.875,140.625,159.375,178.125,196.875,215.625,234.375,253.125,271.875,290.625,309.375,328.125,346.875,365.625,384.375,403.125,421.875,440.625,459.375,478.125,496.875,515.625,534.375,553.125,571.875,590.625,609.375,628.125,646.875,665.625,684.375,703.125,721.875,740.625,759.375,778.125,796.875,815.625,834.375,853.125,871.875,890.625,909.375,928.125,946.875,965.625,984.375,1003.125,1021.875,1040.625,1059.375,1078.125,1096.875,1115.625,1134.375,1153.125,1171.875,1190.625,1209.375,1228.125,1246.875,1265.625,1284.375,1303.125,1321.875,1340.625,1359.375,1378.125,1396.875,1415.625,1434.375,1453.125,1471.875,1490.625,1509.375,1528.125,1546.875,1565.625,1584.375,1603.125,1621.875,1640.625,1659.375,1678.125,1696.875,1715.625,1734.375,1753.125,1771.875,1790.625,1809.375,1828.125,1846.875,1865.625,1884.375,1903.125,1921.875,1940.625,1959.375,1978.125,1996.875,2015.625,2034.375,2053.125,2071.875,2090.625,2109.375,2128.125,2146.875,2165.625,2184.375,2203.125,2221.875,2240.625,2259.375,2278.125,2296.875,2315.625,2334.375,2353.125,2371.875,2390.625,2409.375,2428.125,2446.875,2465.625,2484.375,2503.125,2521.875,2540.625,2559.375,2578.125,2596.875,2615.625,2634.375,2653.125,2671.875,2690.625,2709.375,2728.125,2746.875,2765.625,2784.375,2803.125,2821.875,2840.625,2859.375,2878.125,2896.875,2915.625,2934.375,2953.125,2971.875,2990.625])

    # Creating weights for histo: y8_M_0
    y8_M_0_weights = numpy.array([0.125410279272,2.26858105124,5.56630426752,13.5887279309,200.664545702,26.2494559963,19.8280976327,21.6626509558,23.1095579558,24.8775894382,25.8634326446,26.8575905815,27.1735823167,28.3233056616,28.9424452722,28.866409461,29.1268364114,29.412199558,29.3140657519,29.4817754632,29.3650174604,29.240088636,28.6760780865,29.1072688127,28.5116263104,28.64997463,28.1164487604,28.3507522669,27.4126268186,27.1063928991,26.6719762175,27.1296341696,26.1303394882,26.1023772098,24.9972136245,25.1093825357,24.9481767024,24.4587388913,23.5740355858,23.8018352143,23.2487537383,22.6822567646,22.9006263695,22.047710918,21.5811825876,21.6629067936,20.6273470958,20.2048588544,20.5000357814,19.7057351818,19.672612174,19.0718089425,18.8301660874,18.5326026729,18.2222393705,17.9221855343,17.3579551242,17.2902780156,16.6545689062,16.6976815829,16.1127642834,15.9647660795,15.76966173,15.6134327425,15.2961578205,14.789622845,14.7155497899,14.1345500076,14.0836902408,13.8129218445,13.6162544855,13.0593434366,13.0665068967,12.4529197671,12.3492894445,12.2631720227,11.7781274273,11.687181066,11.629233791,11.2874464041,11.0204356264,10.7515220546,10.5238463476,10.2565997193,10.0687907462,9.59487909515,9.66291197824,9.45819771911,9.15363873813,9.29311834075,8.83831457975,8.45960659187,8.44334090051,8.52181516621,8.19948744645,7.77912585719,8.09678053856,7.57974421843,7.67703855661,7.4910444333,7.07073880857,6.791939502,6.65742875029,6.80144547744,6.45073574522,6.38800350276,6.36247568142,6.26969448296,5.91214908295,5.67978834521,5.55235710675,5.81000581785,5.58233810582,5.4711165942,5.40378726521,5.10413317568,5.14791742673,5.27579238397,4.86472490442,4.80660174089,4.61165329252,4.53979883141,4.4001273504,4.29117639977,4.28648737151,4.20059380791,3.96141139351,3.70827502264,3.85713148253,3.9314695696,3.90100008012,3.73379444931,3.37606876356,3.43910601272,3.34374964631,3.29507169672,3.43460646438,3.10243178528,2.98395407239,3.00049958641,3.00726609803,2.82151781891,2.82602656142,2.83968790333,2.59617263494,2.53120261071,2.63793376817,2.6311496677,2.53804467445,2.42638663948,2.30128792275,2.25463389047,2.40560341117,2.26170620828,2.21058660613,1.94606305207,1.92503637805,1.93888120368,1.93190282634,1.91799284201])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(8,6),dpi=80)
    frame = gridspec.GridSpec(1,1)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y8_M_0_weights,\
             label="$signal$", histtype="stepfilled", rwidth=1.0,\
             color="#5954d8", edgecolor="#5954d8", linewidth=1, linestyle="solid",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"M [ j_{1} , j_{2} ]   ( GeV ) ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y8_M_0_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y8_M_0_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_7.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_7.eps')

# Running!
if __name__ == '__main__':
    selection_7()
