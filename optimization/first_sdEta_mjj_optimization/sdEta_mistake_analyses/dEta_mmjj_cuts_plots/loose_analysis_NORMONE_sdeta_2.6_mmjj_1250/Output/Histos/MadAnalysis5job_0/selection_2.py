def selection_2():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(-3.2,3.2,65,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([-3.15,-3.05,-2.95,-2.85,-2.75,-2.65,-2.55,-2.45,-2.35,-2.25,-2.15,-2.05,-1.95,-1.85,-1.75,-1.65,-1.55,-1.45,-1.35,-1.25,-1.15,-1.05,-0.95,-0.85,-0.75,-0.65,-0.55,-0.45,-0.35,-0.25,-0.15,-0.05,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,1.05,1.15,1.25,1.35,1.45,1.55,1.65,1.75,1.85,1.95,2.05,2.15,2.25,2.35,2.45,2.55,2.65,2.75,2.85,2.95,3.05,3.15])

    # Creating weights for histo: y3_PHI_0
    y3_PHI_0_weights = numpy.array([5.73171913434,13.4695365657,13.1706688194,13.6128284441,13.4285966004,13.6947123745,14.2719758845,13.5514164962,13.6169244406,13.7602163189,13.0232809445,13.1706688194,13.7274643467,13.8502842425,13.8420962494,13.354900663,13.5145725275,13.7151803572,13.596452458,13.2484567534,13.4490645831,13.8257202633,13.6169244406,13.7274643467,13.5882644649,13.776592305,13.5923604614,13.2812087256,12.9823409793,13.1542928333,13.8175322703,13.5759844753,13.4654405692,13.3753726456,13.9198841834,14.1164000166,13.3426206734,13.6455804162,13.768404312,13.7315563433,13.5800764719,13.268924736,13.5432285031,13.4654405692,13.9239801799,13.854380239,13.2361727638,13.2893967186,13.4204086074,13.3917486317,13.8830402147,13.8912282077,13.7970642877,13.8830402147,13.7520283259,13.3876566352,13.4081246178,13.3876566352,13.4695365657,13.6660523989,14.0918360374,13.3876566352,13.5514164962,5.76447110653])

    # Creating weights for histo: y3_PHI_1
    y3_PHI_1_weights = numpy.array([0.631826373913,1.73747917021,1.55511419551,1.56740625377,1.85879039795,1.81054059464,1.53086212359,1.37292585732,1.43337920037,1.64041921332,1.78587917463,1.55588482734,1.54338609236,1.74960140108,1.6520195454,1.83437090186,1.66408409904,1.85890214758,1.4217436211,1.70102596176,1.62797575234,1.74891528241,1.67709071404,1.44581905652,1.6161142706,1.6035093935,1.55555318329,1.60355385303,1.60388749976,1.67752369377,2.00507826778,1.57992461503,1.40981925516,1.34856964596,1.6036948418,1.77375574215,1.57950725622,1.55491352683,1.61570532304,1.8953297217,1.59212695316,1.72512382722,1.90769027166,1.78623605246,1.92036604369,1.53113649095,1.79869393274,1.39695763429,1.57951005997,1.62805826282,1.51843708728,1.62802301562,1.59163789835,1.64036754413,1.58021179955,1.51965191385,1.78559118903,1.32452144701,1.76174245715,1.77433531816,1.61605419015,1.72444211445,1.61599210703,0.485853325613])

    # Creating weights for histo: y3_PHI_2
    y3_PHI_2_weights = numpy.array([3.11271661178,7.5802755383,7.52023209083,8.09245676462,7.82171374869,7.51034812371,7.53946698506,7.52028167595,7.69156933872,8.20253572962,7.37944754067,7.1685578959,7.92171867027,7.75143097408,7.45941594193,7.60055998421,7.59058924312,7.10794421957,7.80187556885,6.92716513854,7.69070159913,7.48965046846,7.4404289733,7.69120571451,7.70095745465,8.08189926629,7.70113513466,8.11189826351,7.85160944357,7.48875793632,7.82110633097,7.43939594998,7.55071041087,7.52987639655,7.56997836184,7.40922753694,8.03270669578,7.72072125681,7.5387603971,7.5906057715,7.34959316672,7.74087347574,7.69080490146,7.09850651851,7.5403636493,7.33963068982,8.10206801359,7.49027854664,7.60002281208,7.29958244174,7.35925400081,7.37974505138,7.4088225918,7.46932056952,8.00193086503,7.14878169746,7.80114418834,7.86160910931,7.65004180125,7.39970306193,7.68006972312,7.59027933613,7.70047813183,3.35307799866])

    # Creating weights for histo: y3_PHI_3
    y3_PHI_3_weights = numpy.array([3.94390805031,9.30066127073,8.93781566879,9.21899206471,9.05913931047,9.14136914676,8.78450766364,9.42714027341,9.06975066032,9.09156649061,9.14675607245,8.75117453747,9.16864096589,9.41040667845,8.89465526264,9.44982548689,9.15288644264,8.77314068167,9.53180750835,9.07062816858,9.01583671548,9.10339660193,8.93315999998,8.90550630225,9.1527442538,9.2024453465,9.09206212027,8.90524629981,9.0265821291,9.36122152811,9.26179496749,8.99316368962,9.23534378108,9.02003738001,9.63686474696,9.03191624179,9.12531805822,9.18538268594,9.0426819681,9.41660611179,8.93201030166,9.05396363676,9.31785799505,9.3615180934,9.12474117779,9.32837996906,9.3675225249,9.14660982108,8.76715250032,9.18548424939,9.2133166988,8.96570499373,8.97663322157,8.99247305813,9.48235423049,9.09800155117,8.94963765504,9.27877637729,9.35622054355,9.41026448961,9.16911222033,8.96042775657,8.5369203338,3.7461148453])

    # Creating weights for histo: y3_PHI_4
    y3_PHI_4_weights = numpy.array([1.13097986797,2.67832267952,2.78980031112,2.81542497093,2.75320373227,2.7621097736,2.78005132434,2.80763604275,2.8559593035,2.82928727496,2.67732781951,2.82245071882,2.83119722982,2.7324996613,2.81449865284,2.77900836474,2.81753453911,2.8006764318,2.76526310305,2.71578024117,2.70200050811,2.73566541649,2.8856295403,2.70098801158,2.75922620272,2.77704229368,2.74245427386,2.73649433289,2.87764661041,2.7661461315,2.78194805181,2.82835334111,2.77989981061,2.83027171339,2.8330915523,2.77996755088,2.70012101633,2.78293649854,2.77898992656,2.79776400117,2.84904538717,2.82545453869,2.83311920957,2.80555613598,2.72660705976,2.72766284593,2.70001239141,2.76316475811,2.77205356375,2.62904343927,2.82617362767,2.70396657916,2.81159223466,2.78102975033,2.76805448304,2.79169543527,2.88758398728,2.77112724566,2.89243643502,2.7729245673,2.73260307544,2.70487966986,2.74656358282,1.1318131935])

    # Creating weights for histo: y3_PHI_5
    y3_PHI_5_weights = numpy.array([0.361980140174,0.881239974906,0.877970764782,0.879211072136,0.898381822727,0.889319176966,0.881269182144,0.876986520883,0.902159958965,0.884760847393,0.903720745734,0.890577488781,0.88254069723,0.877443834207,0.882783557412,0.889086319263,0.886792150758,0.884816461174,0.899630532162,0.871666402535,0.8704176931,0.892877258673,0.888606200287,0.891891014278,0.866615951013,0.930935889759,0.892833247767,0.882775555429,0.86459264963,0.890369437225,0.855797670198,0.884801657506,0.894144772768,0.900914450322,0.877739507476,0.897664044858,0.878514099423,0.900452735908,0.888289721863,0.869178586044,0.887051415005,0.887852013397,0.901677039295,0.866606348633,0.865113978818,0.890828350945,0.899916603052,0.849770976758,0.892585986495,0.894892558073,0.885279775985,0.902683288648,0.898900751319,0.883282080948,0.8926303975,0.882525093364,0.910730082677,0.863625609994,0.880726647701,0.903946001553,0.889330379742,0.883809411623,0.856825524905,0.380134558914])

    # Creating weights for histo: y3_PHI_6
    y3_PHI_6_weights = numpy.array([0.133409508189,0.336990272197,0.325809375861,0.33184087793,0.33130605509,0.30893716477,0.324362155252,0.296332040209,0.319504164458,0.343310678566,0.318446514804,0.311195416725,0.324044660422,0.32841261354,0.316025816659,0.327187819253,0.337755018875,0.318984336651,0.330116149245,0.324739930114,0.324690346539,0.318046347359,0.323279613843,0.306336326296,0.321175210925,0.338113400161,0.322971016066,0.316093394274,0.317218321642,0.320628092158,0.318096830637,0.303534154513,0.329257433694,0.316617620624,0.318604162583,0.307262619462,0.326057193772,0.308333364778,0.313129376103,0.326677688233,0.318776105627,0.316972203169,0.305786208522,0.316666304498,0.335522858277,0.328429707878,0.324689846705,0.316081598181,0.309160690727,0.326314008702,0.338976014421,0.312148800918,0.321766814957,0.338172880459,0.325808276225,0.326951697468,0.308373551466,0.325022336567,0.318355644905,0.330111950636,0.315498891202,0.311802215724,0.30202285513,0.132276483503])

    # Creating weights for histo: y3_PHI_7
    y3_PHI_7_weights = numpy.array([0.0138653390333,0.0356509701295,0.0353924708763,0.0361453922271,0.0359354027071,0.0352124714773,0.0356071081107,0.0340721092782,0.0362800837448,0.0351763542522,0.0373295619633,0.0348543082961,0.0360387378685,0.0350958720995,0.0357991437908,0.0348050441998,0.0344967737507,0.0355627389922,0.036570710481,0.0369489983913,0.0363145832803,0.0352433961703,0.0351082520349,0.0364072693503,0.0355009398971,0.035946785207,0.0363005311736,0.0357936998043,0.0362401192682,0.0367301115785,0.0352398841914,0.0358875593279,0.0374427415621,0.0368765963047,0.038004067278,0.0352225170782,0.0370399326627,0.0354571239782,0.0348663655317,0.0344866149954,0.034978237568,0.0360022979436,0.0365562309018,0.0355845107473,0.0362540833659,0.035540045238,0.0373392513373,0.0348060081081,0.0352689648859,0.036104564424,0.0361084493936,0.0350065219904,0.0352006824596,0.0362174297049,0.036020540956,0.0349507075086,0.0361073262308,0.0348091638601,0.0349429040422,0.0358206850459,0.0358505578216,0.034139700205,0.0365715151349,0.0149859033941])

    # Creating weights for histo: y3_PHI_8
    y3_PHI_8_weights = numpy.array([0.00320550368509,0.00726644508746,0.00604020477156,0.00635036708908,0.00597567338967,0.00654545678382,0.00595471936635,0.00660168170513,0.0066630526815,0.00649200464311,0.00703001170421,0.006124925323,0.00623455040466,0.006383530555,0.0063189739255,0.00600623486758,0.0060166309384,0.00621462707751,0.00641121974706,0.00586650424997,0.00683111110694,0.00626271781598,0.00632297047216,0.00702377851718,0.00592055342217,0.00708850742442,0.00644017428945,0.00606999694023,0.00631814372499,0.00694702878176,0.00592423214609,0.006802704586,0.00572996968156,0.00595454857376,0.00626349455098,0.00665849029156,0.00726448617069,0.00663563972789,0.00632462790288,0.00623061623443,0.00617634131898,0.00603903595617,0.00669359633757,0.00634716064381,0.00708817772046,0.00606908951177,0.00663556547024,0.00578918273065,0.00665930712569,0.00688687117537,0.00637940331488,0.00721924841108,0.00612143372836,0.00637863994625,0.00577221337276,0.00637945529524,0.0068113169881,0.00663402388145,0.00670713053663,0.00544636338438,0.00623839843602,0.00654978748989,0.0065827712523,0.00218154417464])

    # Creating weights for histo: y3_PHI_9
    y3_PHI_9_weights = numpy.array([0.0,0.0,2.60183782008,2.59864478313,0.0,0.0,10.428884857,2.60655122263,0.0,2.60351049146,10.4084697279,0.0,5.21167707849,0.0,0.0,0.0,0.0,2.60521316245,2.60655122263,0.0,0.0,0.0,0.0,0.0,0.0,2.60717775325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.82565205435,5.21265783544,5.21636548134,2.60717775325,7.82754818447,2.6109488599,0.0,0.0,0.0,2.60925657339,2.60248088896,2.60449855601,2.61017156193,2.60183782008,2.59864478313,2.60541739067,0.0,5.23207682316,2.60521316245,0.0,5.22450768713,0.0,2.60494316583,0.0,2.60402163891,5.21433473753,0.0,0.0])

    # Creating weights for histo: y3_PHI_10
    y3_PHI_10_weights = numpy.array([6.31986883883,9.47836613301,11.5889240192,6.31664829313,7.37275642095,4.20989580678,6.32054603841,9.48161361279,4.20841443271,7.37777385416,10.5357670964,7.37135969683,5.26650798656,9.48040157946,10.5313345174,12.6435046003,3.15877663901,6.31899155757,8.42516688518,7.36886637112,5.26149824879,6.3152977417,6.3200035092,9.48124807893,14.7388216484,10.5348013175,10.5324695962,9.48115958126,9.48428008612,6.31795267185,11.5832563205,8.4234507999,6.32300858232,9.48487263575,5.26548449175,10.5278946513,4.21310096159,9.4780236855,8.42731776338,8.41926447525,2.10514644599,7.368770178,4.21001893398,6.31871452138,6.31635971376,7.3767734457,7.36953972297,6.31869913048,8.42919160538,6.31445893768,11.5933642937,7.37670803438,8.43644456674,9.48180215131,6.3226507439,14.7472904908,7.36958204794,8.42571326211,5.26089800372,6.32193506708,9.47549188255,8.42620961862,5.26705051576,1.0514558437])

    # Creating weights for histo: y3_PHI_11
    y3_PHI_11_weights = numpy.array([3.45461332315,15.1991841655,13.8223249179,14.2852984556,11.2891153893,13.8175756832,18.1963585769,8.52107618395,13.5899505494,14.2895712299,12.2047417168,13.5957833474,12.2058406497,8.98240516465,14.282139984,14.966855906,12.2067705161,13.3586059502,11.0575133478,15.6622845032,14.0501767547,9.90550884711,11.5182544378,14.2854444677,18.4255322072,11.9753874927,12.4427836592,9.21572092682,13.3613724947,14.2773407978,11.0518111922,14.0526320629,11.9731819419,12.667092782,15.6647129145,11.0580128628,14.515390425,15.4299178195,12.2069203706,14.9726349101,14.0509990332,12.6710043685,12.2072047099,13.13005095,15.1992994382,12.4381266426,14.7388964814,11.9734624388,13.5906959794,11.2848195605,11.9792760247,13.8157082657,14.280895039,12.6698209023,9.43918087419,11.978061819,13.5917795427,12.2101864301,10.5940172406,14.739165451,12.208368964,11.7476317165,11.283251852,4.37597792499])

    # Creating weights for histo: y3_PHI_12
    y3_PHI_12_weights = numpy.array([3.4326840445,8.47301003808,9.11103567753,9.08231290539,8.63998375316,8.22450381427,8.8621447394,7.55983670721,8.47348708385,8.61190345394,8.4740064482,8.64017995747,8.03121563877,8.50063252723,8.36409741023,8.38973477342,8.05798021496,8.61241127687,8.25222632915,7.78246704493,9.58141050469,8.22546175296,8.80582256095,8.83331424723,8.16892028735,8.25201088912,8.97099196581,8.52845506784,7.80885844822,8.3067826688,8.33473216514,8.88938251422,8.63878729158,8.55615065272,9.02783735574,9.19111781322,8.69525950861,9.13696927076,8.19707368228,8.4731716181,9.02681786276,8.75063528979,8.66733309513,8.25172620052,8.66767164375,7.86433040799,8.58497729773,8.88964796711,8.22315346696,8.05809178212,8.97119971155,7.66984577091,8.50035168577,7.72591788503,8.77767301316,7.58759769352,9.4433057532,8.02946903569,8.33493606374,7.64260799609,7.80881612964,8.33605942959,7.80893539109,3.65463651557])

    # Creating weights for histo: y3_PHI_13
    y3_PHI_13_weights = numpy.array([1.59238967481,4.45680689191,4.69855277729,4.17465118869,4.07305197902,4.3751340576,4.44575960795,4.3346866165,4.3959834167,3.841433428,3.95221574935,4.38507388245,4.08327761934,3.96176599132,4.44628694053,4.48714823759,3.82079342418,4.4469332112,4.10351711739,4.1543364441,4.21370899616,4.36557046544,4.08301364963,4.11336409772,3.99298116776,4.33440808294,3.92208436578,4.03243098542,4.27441049916,4.01233955313,4.11322513436,4.02235523134,4.15436011035,4.1032422248,4.19419222896,4.39587904247,4.20461933582,4.30500367801,3.94229898393,4.2446152977,4.33469147111,4.14354584792,3.93222140938,4.30504554907,4.23507658545,4.05312985144,4.0933102887,3.99256973911,4.39568789199,4.09350811428,4.17413841995,4.70853872098,4.25447623505,4.07288874258,4.27470723752,4.04259472939,4.25482576735,4.0833219177,4.36531438448,4.25436518572,4.01294395274,4.18316618394,4.39564784142,1.9155759798])

    # Creating weights for histo: y3_PHI_14
    y3_PHI_14_weights = numpy.array([0.560116809419,1.5900200655,1.40596902738,1.61837411324,1.57873377175,1.55874085358,1.50502986832,1.57865566991,1.53612671436,1.46839356235,1.47110173421,1.52210300865,1.5673616814,1.54751304003,1.49945116509,1.50235670763,1.5562181255,1.56448614843,1.46837163227,1.61827908291,1.57322816877,1.59275132166,1.42027936302,1.5646008004,1.57018796788,1.63504404798,1.51354912527,1.55612078675,1.45435716027,1.42322684202,1.47386684732,1.53047298719,1.49950041158,1.67206740054,1.6834556499,1.50208892988,1.5702033574,1.47110019526,1.45129272088,1.51354720158,1.61267691065,1.51352988836,1.5842763096,1.56187377637,1.45990393024,1.55622505079,1.64654425614,1.70031333685,1.51352103938,1.49944462454,1.54768886537,1.55327141598,1.51645082043,1.40044803487,1.45697299498,1.53332659008,1.56454462863,1.60985408682,1.61253840492,1.53630677182,1.54476985699,1.56159291752,1.48545746895,0.664806369558])

    # Creating weights for histo: y3_PHI_15
    y3_PHI_15_weights = numpy.array([0.0867606143073,0.160015659664,0.17213515438,0.150786350088,0.182740731341,0.187277994719,0.193531338755,0.155419791493,0.175108874978,0.190527724986,0.178163649786,0.170576101483,0.161459393453,0.161378811864,0.153868536815,0.181266749917,0.166010480946,0.167603798742,0.165990512781,0.166145768219,0.190352855847,0.1903676252,0.193453711036,0.159801917589,0.176771549655,0.158419860618,0.170656446763,0.191983392412,0.173633003078,0.152485534605,0.165934271085,0.172056463267,0.182936632038,0.173852416585,0.140076442418,0.146124197061,0.175230338137,0.127974316462,0.147737719331,0.176651740664,0.172139762418,0.19502127108,0.188751267214,0.156921066681,0.161517643781,0.160139840384,0.175305720914,0.155160323501,0.179665988368,0.185808148715,0.169015158109,0.181357965441,0.182762589983,0.182749356643,0.185751316244,0.179639757997,0.182697722985,0.172196831197,0.16746413974,0.184249450282,0.170677005702,0.178229225713,0.163028016891,0.068615235407])

    # Creating weights for histo: y3_PHI_16
    y3_PHI_16_weights = numpy.array([0.0128228214382,0.0328641425836,0.0317782158975,0.0344820062755,0.0317838811933,0.035211061686,0.0352040176166,0.0287090774824,0.037198925813,0.0341247036518,0.03141251739,0.0267254921751,0.0332188917802,0.0296148277328,0.0319499694901,0.0310525111377,0.0334017718445,0.034669088133,0.0272686788949,0.0296134759185,0.036475616576,0.0379204634414,0.0330514670744,0.0305117122381,0.0330401095234,0.0344838163972,0.0321449041949,0.0317794136589,0.0317792750112,0.0274488168174,0.0377326883458,0.0292479237614,0.0288839853085,0.0330443074653,0.0357531084143,0.033219808395,0.0337675011625,0.0334109456955,0.034669207524,0.0312402862333,0.0299658912135,0.0278021217679,0.0339414654145,0.028168925605,0.0343064591298,0.0321391580212,0.0287154244624,0.0332175707765,0.0379167969821,0.0334060044483,0.0294309809865,0.032683788987,0.0314240020347,0.0306965757337,0.0310574639389,0.0305123323011,0.0335826222617,0.0328675086397,0.0324999692,0.0296145003704,0.0326780890293,0.0348472580294,0.0314177282298,0.0126389361787])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(12,6),dpi=80)
    frame = gridspec.GridSpec(1,1,right=0.7)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights+y3_PHI_16_weights,\
             label="$bg\_dip\_1600\_inf$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#e5e5e5", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights,\
             label="$bg\_dip\_1200\_1600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#f2f2f2", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights,\
             label="$bg\_dip\_800\_1200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#ccc6aa", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights,\
             label="$bg\_dip\_600\_800$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#ccc6aa", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights,\
             label="$bg\_dip\_400\_600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#c1bfa8", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights,\
             label="$bg\_dip\_200\_400$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#bab5a3", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights,\
             label="$bg\_dip\_100\_200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#b2a596", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights,\
             label="$bg\_dip\_0\_100$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#b7a39b", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights,\
             label="$bg\_vbf\_1600\_inf$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#ad998c", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights,\
             label="$bg\_vbf\_1200\_1600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#9b8e82", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights,\
             label="$bg\_vbf\_800\_1200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#876656", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights,\
             label="$bg\_vbf\_600\_800$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#afcec6", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights,\
             label="$bg\_vbf\_400\_600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#84c1a3", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights,\
             label="$bg\_vbf\_200\_400$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#89a8a0", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights,\
             label="$bg\_vbf\_100\_200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#829e8c", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights,\
             label="$bg\_vbf\_0\_100$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#adbcc6", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights,\
             label="$signal$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#7a8e99", linewidth=3, linestyle="dashed",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"\phi [ j_{1} ] ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights+y3_PHI_16_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights+y3_PHI_16_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Legend
    plt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_2.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_2.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_2.eps')

# Running!
if __name__ == '__main__':
    selection_2()
