def selection_2():

    # Library import
    import numpy
    import matplotlib
    import matplotlib.pyplot   as plt
    import matplotlib.gridspec as gridspec

    # Library version
    matplotlib_version = matplotlib.__version__
    numpy_version      = numpy.__version__

    # Histo binning
    xBinning = numpy.linspace(-3.2,3.2,65,endpoint=True)

    # Creating data sequence: middle of each bin
    xData = numpy.array([-3.15,-3.05,-2.95,-2.85,-2.75,-2.65,-2.55,-2.45,-2.35,-2.25,-2.15,-2.05,-1.95,-1.85,-1.75,-1.65,-1.55,-1.45,-1.35,-1.25,-1.15,-1.05,-0.95,-0.85,-0.75,-0.65,-0.55,-0.45,-0.35,-0.25,-0.15,-0.05,0.05,0.15,0.25,0.35,0.45,0.55,0.65,0.75,0.85,0.95,1.05,1.15,1.25,1.35,1.45,1.55,1.65,1.75,1.85,1.95,2.05,2.15,2.25,2.35,2.45,2.55,2.65,2.75,2.85,2.95,3.05,3.15])

    # Creating weights for histo: y3_PHI_0
    y3_PHI_0_weights = numpy.array([2.72256577058,6.37039478349,6.43589872985,6.54643863933,6.35811079355,6.41952274326,6.759334465,6.47274669968,6.49321868291,6.4399947265,6.13293897793,6.3540187969,6.55872262927,6.47274669968,6.55872262927,6.23938289077,6.41543074661,6.46865470303,6.61194658569,6.32535882037,6.40314675667,6.6037585924,6.61194658569,6.48093469297,6.38267877343,6.53825064604,6.47684269632,6.29260684719,6.12475098464,6.12884298129,6.5095946695,6.53415864939,6.43589872985,6.41133474996,6.73476648512,6.78799044153,6.25575887736,6.46046670973,6.58328660916,6.55053463598,6.58328660916,6.40314675667,6.41543074661,6.49321868291,6.59147460245,6.39086676673,6.29260684719,6.12475098464,6.47274669968,6.32945481701,6.51368666615,6.59966259575,6.67745053205,6.41133474996,6.67745053205,6.25166688071,6.32535882037,6.3540187969,6.3540187969,6.35811079355,6.77161445494,6.26394687066,6.39495876337,2.7676009337])

    # Creating weights for histo: y3_PHI_1
    y3_PHI_1_weights = numpy.array([0.631826373913,1.73747917021,1.55511419551,1.56740625377,1.85879039795,1.81054059464,1.53086212359,1.37292585732,1.43337920037,1.64041921332,1.78587917463,1.55588482734,1.54338609236,1.74960140108,1.6520195454,1.83437090186,1.66408409904,1.85890214758,1.4217436211,1.70102596176,1.62797575234,1.74891528241,1.67709071404,1.44581905652,1.6161142706,1.6035093935,1.55555318329,1.60355385303,1.60388749976,1.67752369377,2.00507826778,1.57992461503,1.40981925516,1.34856964596,1.6036948418,1.77375574215,1.57950725622,1.55491352683,1.61570532304,1.8953297217,1.59212695316,1.72512382722,1.90769027166,1.78623605246,1.92036604369,1.53113649095,1.79869393274,1.39695763429,1.57951005997,1.62805826282,1.51843708728,1.62802301562,1.59163789835,1.64036754413,1.58021179955,1.51965191385,1.78559118903,1.32452144701,1.76174245715,1.77433531816,1.61605419015,1.72444211445,1.61599210703,0.485853325613])

    # Creating weights for histo: y3_PHI_2
    y3_PHI_2_weights = numpy.array([3.11271661178,7.5802755383,7.52023209083,8.09245676462,7.82171374869,7.51034812371,7.53946698506,7.52028167595,7.69156933872,8.20253572962,7.37944754067,7.1685578959,7.92171867027,7.75143097408,7.45941594193,7.60055998421,7.59058924312,7.10794421957,7.80187556885,6.92716513854,7.69070159913,7.48965046846,7.4404289733,7.69120571451,7.70095745465,8.08189926629,7.70113513466,8.11189826351,7.85160944357,7.48875793632,7.82110633097,7.43939594998,7.55071041087,7.52987639655,7.56997836184,7.40922753694,8.03270669578,7.72072125681,7.5387603971,7.5906057715,7.34959316672,7.74087347574,7.69080490146,7.09850651851,7.5403636493,7.33963068982,8.10206801359,7.49027854664,7.60002281208,7.29958244174,7.35925400081,7.37974505138,7.4088225918,7.46932056952,8.00193086503,7.14878169746,7.80114418834,7.86160910931,7.65004180125,7.39970306193,7.68006972312,7.59027933613,7.70047813183,3.35307799866])

    # Creating weights for histo: y3_PHI_3
    y3_PHI_3_weights = numpy.array([3.94390805031,9.30066127073,8.93781566879,9.21899206471,9.05913931047,9.14136914676,8.78450766364,9.42714027341,9.06975066032,9.09156649061,9.14675607245,8.75117453747,9.16864096589,9.41040667845,8.89465526264,9.44982548689,9.15288644264,8.77314068167,9.53180750835,9.07062816858,9.01583671548,9.10339660193,8.93315999998,8.90550630225,9.1527442538,9.2024453465,9.09206212027,8.90524629981,9.0265821291,9.36122152811,9.26179496749,8.99316368962,9.23534378108,9.02003738001,9.63686474696,9.03191624179,9.12531805822,9.18538268594,9.0426819681,9.41660611179,8.93201030166,9.05396363676,9.31785799505,9.3615180934,9.12474117779,9.32837996906,9.3675225249,9.14660982108,8.76715250032,9.18548424939,9.2133166988,8.96570499373,8.97663322157,8.99247305813,9.48235423049,9.09800155117,8.94963765504,9.27877637729,9.35622054355,9.41026448961,9.16911222033,8.96042775657,8.5369203338,3.7461148453])

    # Creating weights for histo: y3_PHI_4
    y3_PHI_4_weights = numpy.array([0.876364940493,2.10400785247,2.19374000468,2.16809411579,2.1867523397,2.16312783522,2.18986317937,2.196741017,2.25501043903,2.20853623398,2.10886791315,2.22638518263,2.24209249794,2.13744226418,2.18783778666,2.20467704517,2.17903035462,2.20660223045,2.17216173607,2.10495300901,2.08620660256,2.14054588892,2.27080273025,2.12864605538,2.18096596147,2.1286921508,2.1404324541,2.17699854863,2.23123201593,2.17302632583,2.18291800234,2.22045129905,2.16511154164,2.23812268012,2.202516172,2.19080312513,2.1129351326,2.20066634272,2.17701217684,2.18988282003,2.23127811135,2.20076534767,2.23713022566,2.16812297553,2.1453762882,2.14242217296,2.13549904157,2.13358828616,2.17896461854,2.08917274269,2.22125937182,2.11582391259,2.16122068728,2.19483867902,2.21048306406,2.19464908655,2.25500643074,2.19970916128,2.29343558193,2.13838180911,2.14736039545,2.09900710054,2.1494751732,0.872286096984])

    # Creating weights for histo: y3_PHI_5
    y3_PHI_5_weights = numpy.array([0.154527204797,0.363235575042,0.360972778524,0.380881394897,0.375343912996,0.371570745014,0.369794588181,0.383423620138,0.376854524519,0.365510454531,0.389236969888,0.381896004433,0.383409776734,0.385144723431,0.385929156356,0.376097698383,0.385670252681,0.385704461094,0.389695162577,0.375579050826,0.367778852426,0.368293739059,0.38342085946,0.386189140297,0.366507379717,0.407110125655,0.378364775954,0.369551928501,0.358697418916,0.381658506022,0.372064186372,0.387685748377,0.373578878899,0.394742123839,0.379878268186,0.376866447451,0.375361237256,0.407112926344,0.380367148422,0.374096006082,0.38314807237,0.382423174086,0.385440836258,0.375838754698,0.360958855099,0.382639227223,0.387435766896,0.358727426296,0.382385884915,0.389465506095,0.39171625965,0.388444054876,0.379360580865,0.361716641471,0.384926349723,0.379134645298,0.400281246144,0.367771730675,0.371562022868,0.375341712454,0.390464191714,0.382922416871,0.377368770994,0.173176871541])

    # Creating weights for histo: y3_PHI_6
    y3_PHI_6_weights = numpy.array([0.041242672939,0.103356772835,0.09447084564,0.104821177971,0.101362046909,0.0861695308881,0.0978795637381,0.0887569565241,0.0990792383343,0.1001964408,0.0890518068858,0.0924570461595,0.0933546428363,0.101973040437,0.0970466452047,0.0967601720121,0.098750589394,0.0941942890962,0.0930880229347,0.0941845823764,0.0927592740282,0.0924542471054,0.0978741655623,0.0927743289408,0.0890322634901,0.0976230204313,0.0947825403096,0.09993318976,0.099071051101,0.0967621213534,0.0990510678539,0.0936563808706,0.106788413187,0.0947573688157,0.0924756698661,0.0950385038123,0.0996395189996,0.0944730149069,0.0924566862812,0.0967584425965,0.0973970068077,0.0993453484082,0.0930331914638,0.0999053891546,0.0941788543121,0.0984835396376,0.098210231996,0.0932998113654,0.0876144426117,0.103880695787,0.0973441146814,0.0970879712395,0.0973333283264,0.103079766443,0.0936606094416,0.0976344265768,0.0933459357787,0.0959108190324,0.0950735219787,0.0993338123065,0.100498238814,0.0907870405015,0.0838902411243,0.0409283591545])

    # Creating weights for histo: y3_PHI_7
    y3_PHI_7_weights = numpy.array([0.00192228572121,0.00509717141386,0.00561505895549,0.00529231641152,0.00533555717359,0.00518214424694,0.00570009045989,0.0051576615437,0.00546267277692,0.00522747622245,0.00567737208703,0.00479395803748,0.00494325559019,0.00529168779024,0.00492197466464,0.00516124887578,0.00526962318351,0.00472966684433,0.00558940282587,0.00574493630162,0.00554928002532,0.00522504555353,0.00490160314454,0.0055073467955,0.00494565273265,0.0052669536385,0.00520230203581,0.00501107125329,0.00555047859655,0.00596053244475,0.00557226660993,0.00550462696078,0.0059347631633,0.00506996468509,0.00595889802943,0.0056163455337,0.00535649026203,0.00550700734001,0.0057221885931,0.00529123099212,0.0053119880666,0.00559421387402,0.00554986673851,0.00563729538537,0.00503062975654,0.00481317289444,0.0058932867316,0.00459415286077,0.00526881016666,0.00582744913012,0.00524731131907,0.00509801376637,0.00544295083213,0.00578935468088,0.00520648027188,0.0051160342429,0.00555056241272,0.00531337103341,0.00552947007355,0.00554961529,0.00589586407883,0.00527058706946,0.00524496865712,0.00211630506771])

    # Creating weights for histo: y3_PHI_8
    y3_PHI_8_weights = numpy.array([0.000255974367924,0.00039791352772,0.000423929448748,0.000227130115776,0.000453799591305,0.000423774614187,0.000426099807282,0.000454814337192,0.000369130793334,0.000482558402116,0.000537199102503,0.00022467668638,0.000510224455386,0.000283701790362,0.000369221732635,0.000422165493787,0.000481964473384,0.000370834270689,0.000397422425779,0.000426240674041,0.000538836901473,0.000423696156751,0.000426088514166,0.00039425871884,0.00025410669461,0.000538987129631,0.000511134145578,0.000312591214972,0.000453585022106,0.000283853058675,0.000423607000574,0.000395720731548,0.00034078878765,0.000227088063779,0.000312262823054,0.000340519535996,0.000652197494529,0.000596313511255,0.000483096608238,0.000426237850762,0.000284113394712,0.000423790513705,0.000481639647713,0.000370817182421,0.000424068086603,0.000311919423179,0.000284263028496,0.000369135994111,0.000568238528321,0.000397761367845,0.000596145600455,0.000369249073862,0.000482696297003,0.000282318383683,0.000367125225134,0.000311245848262,0.000510747802144,0.000366698910014,0.000339635998282,0.000283216780759,0.000284189920431,0.000537766432975,0.000227417050072,5.45064460433e-05])

    # Creating weights for histo: y3_PHI_9
    y3_PHI_9_weights = numpy.array([0.0,0.0,2.60183782008,2.59864478313,0.0,0.0,10.428884857,2.60655122263,0.0,2.60351049146,10.4084697279,0.0,5.21167707849,0.0,0.0,0.0,0.0,2.60521316245,2.60655122263,0.0,0.0,0.0,0.0,0.0,0.0,2.60717775325,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,7.82565205435,5.21265783544,5.21636548134,2.60717775325,7.82754818447,2.6109488599,0.0,0.0,0.0,2.60925657339,2.60248088896,2.60449855601,2.61017156193,2.60183782008,2.59864478313,2.60541739067,0.0,5.23207682316,2.60521316245,0.0,5.22450768713,0.0,2.60494316583,0.0,2.60402163891,5.21433473753,0.0,0.0])

    # Creating weights for histo: y3_PHI_10
    y3_PHI_10_weights = numpy.array([6.31986883883,9.47836613301,11.5889240192,6.31664829313,7.37275642095,4.20989580678,6.32054603841,9.48161361279,4.20841443271,7.37777385416,10.5357670964,7.37135969683,5.26650798656,9.48040157946,10.5313345174,12.6435046003,3.15877663901,6.31899155757,8.42516688518,7.36886637112,5.26149824879,6.3152977417,6.3200035092,9.48124807893,14.7388216484,10.5348013175,10.5324695962,9.48115958126,9.48428008612,6.31795267185,11.5832563205,8.4234507999,6.32300858232,9.48487263575,5.26548449175,10.5278946513,4.21310096159,9.4780236855,8.42731776338,8.41926447525,2.10514644599,7.368770178,4.21001893398,6.31871452138,6.31635971376,7.3767734457,7.36953972297,6.31869913048,8.42919160538,6.31445893768,11.5933642937,7.37670803438,8.43644456674,9.48180215131,6.3226507439,14.7472904908,7.36958204794,8.42571326211,5.26089800372,6.32193506708,9.47549188255,8.42620961862,5.26705051576,1.0514558437])

    # Creating weights for histo: y3_PHI_11
    y3_PHI_11_weights = numpy.array([3.45461332315,15.1991841655,13.8223249179,14.2852984556,11.2891153893,13.8175756832,18.1963585769,8.52107618395,13.5899505494,14.2895712299,12.2047417168,13.5957833474,12.2058406497,8.98240516465,14.282139984,14.966855906,12.2067705161,13.3586059502,11.0575133478,15.6622845032,14.0501767547,9.90550884711,11.5182544378,14.2854444677,18.4255322072,11.9753874927,12.4427836592,9.21572092682,13.3613724947,14.2773407978,11.0518111922,14.0526320629,11.9731819419,12.667092782,15.6647129145,11.0580128628,14.515390425,15.4299178195,12.2069203706,14.9726349101,14.0509990332,12.6710043685,12.2072047099,13.13005095,15.1992994382,12.4381266426,14.7388964814,11.9734624388,13.5906959794,11.2848195605,11.9792760247,13.8157082657,14.280895039,12.6698209023,9.43918087419,11.978061819,13.5917795427,12.2101864301,10.5940172406,14.739165451,12.208368964,11.7476317165,11.283251852,4.37597792499])

    # Creating weights for histo: y3_PHI_12
    y3_PHI_12_weights = numpy.array([1.96542098087,4.79071491525,4.73533092779,5.06719242697,4.73579258926,4.5139873369,4.70781975147,4.1256761817,4.54121766916,4.73473846224,4.48608759551,5.04025063313,4.79075723422,4.54151005476,4.45832635256,4.26435159237,4.67960069423,4.48647616058,4.70809674835,4.32058195918,5.4271075547,4.95752089804,4.92900945521,5.06703469264,4.18149490037,4.45873030634,4.84542179922,4.51346796775,4.59727106575,4.09785723106,4.48593370835,5.26177888861,4.73454225612,4.67902746457,5.01287410807,5.45371464398,4.84626817858,5.78690726707,4.3474198792,4.31980867622,4.84546796537,4.56939056025,4.48571057197,4.90153290349,4.56922513156,4.486033735,4.87447954146,5.15076854142,4.7903955994,4.34760839096,4.95620131568,4.09771488545,4.67946219579,3.9323400532,4.98375481097,4.01540449286,5.40039659159,4.34658504138,4.48582598734,3.87638283609,4.3750810955,4.79076877575,4.48621839959,1.85500733113])

    # Creating weights for histo: y3_PHI_13
    y3_PHI_13_weights = numpy.array([0.231641948062,0.635213201358,0.675504429677,0.796792549793,0.615009032305,0.655306935275,0.796433332203,0.866809033649,0.816500367515,0.69567279833,0.847146118125,0.625056809442,0.594892422538,0.69551806778,0.766197769246,0.705769725171,0.695766850232,0.786409219738,0.67553658936,0.6454132819,0.594738298775,0.725902293422,0.766271190409,0.877084962499,0.645265832788,0.725917463084,0.756345377351,0.766121314151,0.695535057801,0.725992704606,0.695431904101,0.756321712679,0.715782308694,0.725967219574,0.645274327799,0.625092609844,0.705898363903,0.675423727077,0.584710484912,0.806650402766,0.856892929175,0.705715721176,0.655307542061,0.736031986733,0.65541251612,0.675324820883,0.544576414288,0.655314823499,0.594737813346,0.745974789812,0.655368827495,0.937832783043,0.735933080539,0.655345769609,0.534507885053,0.584614005863,0.857144138773,0.675683431686,0.745869815753,0.80640404746,0.665386265309,0.806411935684,0.756020139804,0.282212078485])

    # Creating weights for histo: y3_PHI_14
    y3_PHI_14_weights = numpy.array([0.0707333442077,0.161298529729,0.172547314849,0.178191444144,0.195181157053,0.158420044179,0.164101607868,0.189560111658,0.186699400712,0.135787625482,0.155580262637,0.186707672444,0.164078985645,0.141442527265,0.164144082246,0.181102862727,0.169787480552,0.178198484734,0.169774668986,0.164062980806,0.172592597769,0.175450192388,0.132955307735,0.206551979064,0.172554355439,0.155619659162,0.169779401186,0.203663528963,0.164090873854,0.169767166719,0.164073945659,0.178215220563,0.172595944934,0.141439603304,0.183858195663,0.200836905245,0.149974029413,0.166963780794,0.203715621634,0.195220784417,0.212228810553,0.138624483064,0.192373269768,0.175433802818,0.192450062213,0.1725898277,0.164056825099,0.249018432045,0.149907624723,0.130158385303,0.186739412808,0.161256709394,0.158408694594,0.158416119916,0.186721484311,0.183896861198,0.141438833841,0.172604101246,0.200874955209,0.19523878986,0.164089873551,0.166870598779,0.164075984737,0.104686146591])

    # Creating weights for histo: y3_PHI_15
    y3_PHI_15_weights = numpy.array([0.00152437825309,0.0136868172648,0.0152802529458,0.00916950020373,0.0106636042307,0.00761641361239,0.0167362332166,0.0106841096801,0.00915878598528,0.0198678671452,0.00913294469908,0.0106509459477,0.0106602219129,0.00608547399366,0.0106430952359,0.0136965316786,0.00759820913179,0.015197526794,0.0076284124498,0.0106629317853,0.00912227657091,0.0167395658987,0.0106618752541,0.00609584076228,0.0152524215047,0.0167524593604,0.0228521894336,0.0121606852173,0.00304343485101,0.0121463026849,0.00456718556715,0.0136589621877,0.00457776506015,0.0121851130681,0.00911366596031,0.0106489037935,0.0106646926705,0.0091146374017,0.00913891870904,0.0106713355805,0.0137347747968,0.00306282467918,0.012175233202,0.0106309758546,0.0121964583689,0.0091754222144,0.00915818208437,0.0182746323706,0.0136815700632,0.0106452224798,0.00762004883585,0.0137250131109,0.0121884339322,0.0121849121617,0.0122198344158,0.00910601260947,0.00762769627768,0.0045896197177,0.00762886035282,0.00912672487427,0.0106456432013,0.00919867417205,0.00608219212904,0.0046024871797])

    # Creating weights for histo: y3_PHI_16
    y3_PHI_16_weights = numpy.array([0.000180409057679,0.000902055109054,0.000901917619851,0.00072224811544,0.000541555337044,0.000361335105573,0.000722502682285,0.000541034264517,0.00090292202277,0.000361985579703,0.000360977826206,0.000903448101906,0.000181035808182,0.00126408844411,0.00072148364466,0.000542574374668,0.000721956191586,0.000903190068948,0.000360867526745,0.00126455482905,0.000542109915343,0.000722634779754,0.000541671259313,0.000360781682645,0.000360439731207,0.000180407170573,0.000540544001896,0.00072296714161,0.000721824094116,0.000541817991488,0.00144538009004,0.000903294437503,0.000361274987745,0.00144538047517,0.00126403991851,0.000902190287514,0.00144515055625,0.00126499733632,0.000721339608352,0.00126343951048,0.000722046695683,0.000721905740366,0.000541197557016,0.000180706219218,0.000540937983562,0.00036081618974,0.000722377902167,0.000540992286021,0.000902524189865,0.000902349728775,0.00126402952017,0.000360837063451,0.000361621368107,0.000181035808182,0.000541865361718,0.00090283228892,0.000722302417899,0.000361940289142,0.000541177145454,0.000721099676213,0.000361401231333,0.000722398698854,0.000903567875414,0.0])

    # Creating a new Canvas
    fig   = plt.figure(figsize=(12,6),dpi=80)
    frame = gridspec.GridSpec(1,1,right=0.7)
    pad   = fig.add_subplot(frame[0])

    # Creating a new Stack
    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights+y3_PHI_16_weights,\
             label="$bg\_dip\_1600\_inf$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#e5e5e5", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights,\
             label="$bg\_dip\_1200\_1600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#f2f2f2", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights,\
             label="$bg\_dip\_800\_1200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#ccc6aa", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights,\
             label="$bg\_dip\_600\_800$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#ccc6aa", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights,\
             label="$bg\_dip\_400\_600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#c1bfa8", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights,\
             label="$bg\_dip\_200\_400$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#bab5a3", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights,\
             label="$bg\_dip\_100\_200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#b2a596", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights,\
             label="$bg\_dip\_0\_100$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#b7a39b", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights,\
             label="$bg\_vbf\_1600\_inf$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#ad998c", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights,\
             label="$bg\_vbf\_1200\_1600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#9b8e82", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights,\
             label="$bg\_vbf\_800\_1200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#876656", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights,\
             label="$bg\_vbf\_600\_800$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#afcec6", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights,\
             label="$bg\_vbf\_400\_600$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#84c1a3", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights,\
             label="$bg\_vbf\_200\_400$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#89a8a0", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights,\
             label="$bg\_vbf\_100\_200$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#829e8c", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights+y3_PHI_1_weights,\
             label="$bg\_vbf\_0\_100$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#adbcc6", linewidth=4, linestyle="dashdot",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")

    pad.hist(x=xData, bins=xBinning, weights=y3_PHI_0_weights,\
             label="$signal$", histtype="step", rwidth=1.0,\
             color=None, edgecolor="#7a8e99", linewidth=3, linestyle="dashed",\
             bottom=None, cumulative=False, normed=False, align="mid", orientation="vertical")


    # Axis
    plt.rc('text',usetex=False)
    plt.xlabel(r"\phi [ j_{1} ] ",\
               fontsize=16,color="black")
    plt.ylabel(r"$\mathrm{Events}$ $(\mathcal{L}_{\mathrm{int}} = 40.0\ \mathrm{fb}^{-1})$ ",\
               fontsize=16,color="black")

    # Boundary of y-axis
    ymax=(y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights+y3_PHI_16_weights).max()*1.1
    ymin=0 # linear scale
    #ymin=min([x for x in (y3_PHI_0_weights+y3_PHI_1_weights+y3_PHI_2_weights+y3_PHI_3_weights+y3_PHI_4_weights+y3_PHI_5_weights+y3_PHI_6_weights+y3_PHI_7_weights+y3_PHI_8_weights+y3_PHI_9_weights+y3_PHI_10_weights+y3_PHI_11_weights+y3_PHI_12_weights+y3_PHI_13_weights+y3_PHI_14_weights+y3_PHI_15_weights+y3_PHI_16_weights) if x])/100. # log scale
    plt.gca().set_ylim(ymin,ymax)

    # Log/Linear scale for X-axis
    plt.gca().set_xscale("linear")
    #plt.gca().set_xscale("log",nonposx="clip")

    # Log/Linear scale for Y-axis
    plt.gca().set_yscale("linear")
    #plt.gca().set_yscale("log",nonposy="clip")

    # Legend
    plt.legend(bbox_to_anchor=(1.05,1), loc=2, borderaxespad=0.)

    # Saving the image
    plt.savefig('../../HTML/MadAnalysis5job_0/selection_2.png')
    plt.savefig('../../PDF/MadAnalysis5job_0/selection_2.png')
    plt.savefig('../../DVI/MadAnalysis5job_0/selection_2.eps')

# Running!
if __name__ == '__main__':
    selection_2()
